{"version":3,"sources":["graphql/apolloClient.ts","theme/Theme.tsx","atoms/HeaderAtoms.tsx","mattapan_mapping_logo_2.svg","atoms/Logos.tsx","organisms/Header.tsx","organisms/Footer.tsx","templates/StandardLayout.tsx","pages/AboutPage.tsx","pages/ContactPage.tsx","data/ExplorePageData.ts","atoms/Tokens.tsx","atoms/TogglePanelAtoms.tsx","molecules/TogglePanel.tsx","organisms/Narrative.tsx","atoms/MapAtoms.tsx","molecules/MapLayers.tsx","graphql/generated.ts","pages/MapPage.tsx","pages/ActPage.tsx","organisms/CommunityVideo.tsx","pages/MeetPage.tsx","organisms/LandingGrid.tsx","organisms/SplashVideo.tsx","pages/LandingPage.tsx","pages/SharePage.tsx","GlobalStyle.tsx","atoms/MapStoryAtoms.tsx","molecules/MapStory.tsx","pages/MapStoryPage.tsx","App.tsx","index.tsx"],"names":["client","ApolloClient","uri","process","cache","InMemoryCache","Theme","spacing","xs","s","m","l","xl","xxl","mediaQuery","tablet","desktop","fonts","fontFamily","header","body","fontWeight","bold","semiBold","regular","fontSize","headline","subHeadline","title","subtitle","large","small","colors","peach","green","teal","orange","brown","red","blue","black","white","map","street","outdoor","light","dark","satellite","satelliteStreet","navigationDay","navigationNight","Link","styled","a","LinkText","span","props","theme","color","HeaderTitle","HeaderLink","href","children","ExternalLink","target","Logo","div","HeaderLogo","PowerfulPathwaysLogo","CFBLogo","MattapanMappingLogo","mattapan_logo","LogoContainer","HeaderContainer","Header","className","FooterContainer","FooterSubContainer","Footer","Layout","LayoutContent","StyledHeader","StyledFooter","StandardLayout","AboutPage","ContactPage","EXPLORE_PAGE_BOUNDARY_DATA","id","file","visible","ExplorePageToggleStates","data","reduce","obj","item","Object","assign","NARRATIVES","name","Text","Headline","SubHeadline","Title","BodySmall","TogglePanelContainer","CircleIcon","ToggleItemContainer","TogglePanel","toggleState","toggleHandler","toggleFeature","checked","type","onChange","NarrativeButton","button","NarrativeSelection","NarrativeContainer","NarrativeHeadline","NarrativeSubHeadline","SelectedNarrativeTitle","Narratives","onNarrativeChange","narrative","onClick","NarrativePanel","ExplorePageNarratives","setNarrative","React","narrativeColor","setNarrativeColor","selectedNarrativeColor","selectedNarrative","Map","startingCoordinates","mapStyle","latitude","lat","longitude","lng","zoom","width","height","viewport","setViewport","touchZoom","doubleClickZoom","mapboxApiAccessToken","onViewportChange","MapGeoJsonSource","p","layer","paint","Pin","size","pinStyle","fill","stroke","display","viewBox","style","d","Boundaries_Select_Column","Narratives_Select_Column","Videos_Select_Column","Visibles_Constraint","Visibles_Select_Column","Visibles_Update_Column","Boundary_Narrative_View_Select_Column","Narrative_Boundary_View_Select_Column","Order_By","MapLayers","geoJsonData","defaultOptions","CommunityVideosDocument","gql","MapPageDocument","MapContainer","ExplorePageContainer","urls","boundary","boundaryIds","boundaryDataFileLocations","url","fetch","then","res","json","MapPage","mapData","baseOptions","options","Apollo","useMapPageQuery","setData","narrativeData","setNarrativeData","featureToggle","setFeatureToggle","gqlNarrative","gqlBoundaries","Boundaries","console","log","fetchAll","Promise","all","rawData","ExplorePageData","idx","undefined","filteredNarratives","filter","length","dataWithNarrative","JSON","parse","stringify","boundaries","forEach","boundaryIndex","findIndex","boundaryName","landmark","ActPage","CommunityVideoContainer","CommunityVideoPlayer","video","CommunityVideoComponent","videoFragment","onVideoClickHander","autoPlay","autoplay","loop","muted","ref","currentTime","src","speakerName","transcript","errorState","MeetPage","useCommunityVideosQuery","loading","error","useState","selectedVideo","onSelectedVideo","onVideoClickPauseVideos","Videos","index","LandingGridContainer","CardContainer","CardImage","CardTitle","LandingCard","LandingGrid","VideoContainer","SplashVideo","preload","playsInline","LandingPage","SharePage","GlobalStyle","Chapter","content","image","isActive","hidden","alignment","alt","footer","byline","footerHtml","dangerouslySetInnerHTML","__html","layerTypes","alignments","Story","onMarkerCoordsChange","chapterData","headerTitle","headerSubtitle","headerByline","showMarkers","toggleLayer","activeStep","setActiveStep","useContext","MapContext","current","mapRef","setMapRef","setLayerOpacity","duration","opacity","paintProps","layerType","getLayer","getLayerPaintType","prop","transitionProp","setPaintProperty","useEffect","getMap","chapters","record","description","paddingTop","paddingBottom","onStepEnter","chapter","find","chap","mapAnimation","location","center","onChapterEnter","transition","callback","rotateAnimation","once","rotateNumber","getBearing","rotateTo","easing","t","onStepExit","onChapterExit","offset","MAPBOX_TOKEN","method","headers","query","DEFAULT_CONFIG","pitch","bearing","transformRequest","hasQuery","indexOf","StorytellingMap","setChapterData","markerCoords","setMarkerCoords","activeLayers","_setActiveLayers","activeLayersRef","useRef","setActiveLayers","layers","createRef","fetchChapters","Provider","value","container","isDragging","eventManager","top","position","offsetLeft","offsetTop","coords","NotFound","MattapanMappingRoutes","path","element","App","ApolloProvider","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5848b2d0.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client'\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPHQL_URI,\n  cache: new InMemoryCache(),\n})\n\nexport default client\n","import '@emotion/react'\n\nexport const Theme: Theme = {\n  spacing: {\n    xs: '4px',\n    s: '8px',\n    m: '16px',\n    l: '24px',\n    xl: '32px',\n    xxl: '40px',\n  },\n\n  mediaQuery: {\n    tablet: '576px',\n    desktop: '921px',\n  },\n\n  fonts: {\n    fontFamily: {\n      header: \"'Baron Neue', sans-serif\",\n      body: \"'Lato', sans-serif\",\n    },\n    fontWeight: {\n      bold: 700,\n      semiBold: 500,\n      regular: 400,\n    },\n    fontSize: {\n      headline: '72px',\n      subHeadline: '60px',\n      title: '40px',\n      subtitle: '32px',\n      large: '24px',\n      regular: '16px',\n      small: '12px',\n    }\n  },\n\n  colors: {\n    peach: '#FEC0AA',\n    green: '#226653',\n    teal: '#2A9D8F',\n    orange: '#ED5D31',\n    brown: '#4D4319',\n    red: '#D32F2F',\n    blue: '#B4DAF9',\n    black: '#000000',\n    white: '#FFFFFF',\n  },\n\n  map: {\n    street: 'mapbox://styles/mapbox/streets-v11',\n    outdoor: 'mapbox://styles/mapbox/outdoors-v11',\n    light: 'mapbox://styles/mapbox/light-v10',\n    dark: 'mapbox://styles/mapbox/dark-v10',\n    satellite: 'mapbox://styles/mapbox/satellite-v9',\n    satelliteStreet: 'mapbox://styles/mapbox/satellite-streets-v11',\n    navigationDay: 'mapbox://styles/mapbox/navigation-day-v1',\n    navigationNight: 'mapbox://styles/mapbox/navigation-night-v1',\n  }\n}\n\ntype ThemeType = typeof Theme;\n\ndeclare module '@emotion/react' {\n  export interface Theme extends ThemeType { }\n}\n","import styled from '@emotion/styled'\n\nexport const Link = styled.a`\n    display: inline-block;\n    text-decoration: none;\n`;\n\nconst LinkText = styled.span<{ color: string }>`\n    padding: 0 ${props => props.theme.spacing.s};\n    font-family: ${props => props.theme.fonts.fontFamily.body};\n    font-size: ${props => props.theme.fonts.fontSize.regular};\n    color: ${ props => props.theme.colors.black };\n    transition: color ease .2s;\n\n    &:hover {\n        color: ${ props => props.color };\n    }\n`\n\nexport const HeaderTitle = styled.span`\n    font-family: ${ props => props.theme.fonts.fontFamily.header };\n    font-size: ${props => props.theme.fonts.fontSize.subtitle};\n    font-weight: ${ props => props.theme.fonts.fontWeight.bold };\n    color: ${ props => props.theme.colors.black };\n    padding: 0 ${props => props.theme.spacing.s};\n`\n\nexport const HeaderLink = ({ href, children, color }: { href: string, children: string, color: string; }) => {\n    return (\n        <Link href={href}> <LinkText color={ color }>{children}</LinkText></Link>\n    )\n}\n\nexport const ExternalLink = ({ href, children }: { href: string, children: any }) => {\n    return (\n        <Link target=\"_blank\" href={href}>{children}</Link>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/mattapan_mapping_logo_2.f5c2e6bf.svg\";","import styled from '@emotion/styled';\nimport mattapan_logo from '@/mattapan_mapping_logo_2.svg'\n\n\nconst Logo = styled.div`\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  width: 100px;\n  height: 100px;\n`\n\nconst HeaderLogo = styled(Logo)`\n\twidth: 200px;\n\theight: 200px;\n`\n\n\nexport const PowerfulPathwaysLogo = styled(Logo)`\n  background-image: url('https://tinyurl.com/57ftrcev');\n`;\n\nexport const CFBLogo = styled(Logo)`\n  background-image: url('https://tinyurl.com/jra96rec');\n`\n\nexport const MattapanMappingLogo = styled(HeaderLogo)`\n  background-image: url(${mattapan_logo});\n`\n\n\nexport const LogoContainer = styled.div`\n\tdisplay: none;\n\n\t@media (min-width: ${props => props.theme.mediaQuery.tablet}) {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport { Theme } from '@/theme/Theme';\nimport { HeaderLink, HeaderTitle, Link } from '@/atoms/HeaderAtoms';\nimport { MattapanMappingLogo, LogoContainer } from '@/atoms/Logos';\n\nconst HeaderContainer = styled.div`\n\theight: 100px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`;\n\nconst Header: React.FC<{className?: string}> = function HeaderComponent({className}) {\n\treturn (\n\t\t<HeaderContainer className={className}>\n\t\t\t<LogoContainer>\n\t\t\t\t<Link href='/'><MattapanMappingLogo /></Link>\n\t\t\t</LogoContainer>\n\t\t\t<Link href='/' color={Theme.colors.black}><HeaderTitle>Mattapan Boston</HeaderTitle></Link>\n\t\t\t<div>\n\t\t\t\t<HeaderLink href='/about' color={ Theme.colors.blue }>About</HeaderLink>\n\t\t\t\t<HeaderLink href='/explore' color={ Theme.colors.blue }>Explore</HeaderLink>\n\t\t\t\t<HeaderLink href='/story' color={ Theme.colors.peach }>MapBox</HeaderLink>\n\t\t\t\t<HeaderLink href='/meet' color={ Theme.colors.teal }>Meet</HeaderLink>\n\t\t\t\t<HeaderLink href='/share' color={ Theme.colors.orange }>Share</HeaderLink>\n\t\t\t\t<HeaderLink href='/act' color={ Theme.colors.red }>Act</HeaderLink>\n\t\t\t</div>\n\t\t</HeaderContainer>\n\t);\n}\n\nexport default Header;","import styled from '@emotion/styled';\nimport { HeaderTitle, ExternalLink } from '@/atoms/HeaderAtoms';\nimport { PowerfulPathwaysLogo, CFBLogo, LogoContainer } from '@/atoms/Logos';\n\nconst FooterContainer = styled.div`\n  height: 250px;\n  background-color: #4c4141;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  /* FIXME: also styles HeaderTitle */\n  span {\n    font-family: ${ props => props.theme.fonts.fontFamily.body };\n    color: ${ props => props.theme.colors.white };\n  }\n`;\n\nconst FooterSubContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Footer: React.FC<{className?: string}> = function FooterComponent({className}) {\n  return (\n    <FooterContainer className={className}>\n      <HeaderTitle>Mattapan Boston</HeaderTitle>\n      <FooterSubContainer>\n          <LogoContainer>\n              <ExternalLink href='https://powerfulpathways.org/' ><PowerfulPathwaysLogo /></ExternalLink> |\n              <ExternalLink href='https://www.codeforboston.org/' ><CFBLogo /></ExternalLink>\n          </LogoContainer>\n      </FooterSubContainer>\n      <FooterSubContainer>\n        <span>About</span>\n        <span>Contact</span>\n        <span>Donate</span>\n      </FooterSubContainer>\n      <FooterSubContainer>\n        <span>For Media</span>\n        <span>Careers</span>\n        <span>Newsletter</span>\n      </FooterSubContainer>\n    </FooterContainer>\n  )\n}\n\nexport default Footer;\n","import styled from '@emotion/styled';\n\nimport Header from '@/organisms/Header';\nimport Footer from '@/organisms/Footer';\n\nexport const Layout = styled.div`\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LayoutContent = styled.div`\n  /* TODO: wrap in component selector */\n  flex-grow: 1;\n  padding: 0 16px;\n\n  @media (min-width: ${props => props.theme.mediaQuery.tablet}) {\n    padding: 0 32px;\n  }\n\n  @media (min-width: ${props => props.theme.mediaQuery.desktop}) {\n    padding: 0 200px;\n  }\n`;\n\nexport const StyledHeader = styled(Header)`\n  padding: 0 16px;\n\n  @media (min-width: ${props => props.theme.mediaQuery.tablet}) {\n    padding: 0 32px;\n  }\n\n  @media (min-width: ${props => props.theme.mediaQuery.desktop}) {\n    padding: 0 200px;\n  }\n`;\n\nexport const StyledFooter = styled(Footer)`\n  padding: 0 16px;\n\n  @media (min-width: ${props => props.theme.mediaQuery.tablet}) {\n    padding: 0 32px;\n  }\n\n  @media (min-width: ${props => props.theme.mediaQuery.desktop}) {\n    padding: 0 200px;\n  }\n`;\n\nconst StandardLayout: React.FC = function StandardLayoutComponent({children}) {\n  return (\n    <Layout>\n      <StyledHeader />\n      <LayoutContent>\n        {children}\n      </LayoutContent>\n      <StyledFooter />\n    </Layout>\n  );\n}\n\nexport default StandardLayout;\n","import StandardLayout from \"@/templates/StandardLayout\"\n\nexport default function AboutPage() {\n  return (\n    <StandardLayout>\n      <h1>About</h1>\n    </StandardLayout>\n  )\n}\n","import StandardLayout from \"@/templates/StandardLayout\"\n\nexport default function ContactPage() {\n  return (\n    <StandardLayout>\n      <h1>Contact</h1>\n    </StandardLayout>\n  )\n}\n","import { Theme } from '@/theme/Theme'\n\nexport const EXPLORE_PAGE_BOUNDARY_DATA: GeoJsonMeta[] = [\n  {\n    id: 'greaterMattapanZoning',\n    file: './boundaries/greater_mattapan_zoning.json',\n    color: Theme.colors.peach,\n    visible: false,\n  },\n  {\n    id: 'zoningSubdistricts',\n    file: './boundaries/1Zoning_Subdistricts.geojson',\n    color: Theme.colors.peach,\n    visible: false,\n  },\n  {\n    id: 'dotHpZoningSubdistricts',\n    file: './boundaries/Dot_HP_Zoning_Subdistricts.json',\n    color: Theme.colors.peach,\n    visible: false,\n  },\n  {\n    id: 'greaterMattapanMergedPoly',\n    file: './boundaries/Greater_Mattapan_Merged_Poly.json',\n    color: Theme.colors.peach,\n    visible: false,\n  },\n  {\n    id: 'greaterMattapanNeighborhoodLine',\n    file: './boundaries/Greater_Mattapan_Neighborhood_Line.json',\n    color: Theme.colors.blue,\n    visible: false,\n  },\n  {\n    id: 'mattapanNeighborhood',\n    file: './boundaries/mattapan_neighborhood.json',\n    color: Theme.colors.blue,\n    visible: false,\n  },\n  {\n    id: 'mattapanSquare',\n    file: './boundaries/Mattapan_Square_qtr_mile.json',\n    color: Theme.colors.teal,\n    visible: false,\n  },\n  {\n    id: 'mattapanZoningSubdistricts',\n    file: './boundaries/Mattapan_Zoning_subdistricts.geojson',\n    color: Theme.colors.blue,\n    visible: false,\n  },\n  {\n    id: 'mattapanPlanningDistrict',\n    file: './boundaries/mattapan_planning_district.json',\n    color: Theme.colors.blue,\n    visible: false,\n  },\n  {\n    id: 'mattapanPlanBoundary',\n    file: './boundaries/PLAN_Mattapan_Poly.json',\n    color: Theme.colors.blue,\n    visible: false,\n  },\n  {\n    id: 'mortonStCorridor',\n    file: './boundaries/Morton_St_Corridor.json',\n    color: Theme.colors.orange,\n    visible: false,\n  },\n  {\n    id: 'riverStCorridor',\n    file: './boundaries/River_St_Corridor_FeaturesTo.json',\n    color: Theme.colors.orange,\n    visible: false,\n  },\n  {\n    id: 'cummimnsHwyCorridor',\n    file: './boundaries/Cummins_Hwy_Corridor.json',\n    color: Theme.colors.orange,\n    visible: false,\n  },\n  {\n    id: 'blueHillAveCorridor',\n    file: './boundaries/Blue_Hill_Ave_Corridor.json',\n    color: Theme.colors.orange,\n    visible: false,\n  },\n  {\n    id: 'subDistricts',\n    file: './boundaries/sd.json',\n    color: Theme.colors.blue,\n    visible: false,\n  },\n  {\n    id: 'transportLayer',\n    file: './boundaries/BTD_transportation_projects.geojson',\n    color: Theme.colors.orange,\n    visible: false,\n  },\n]\n\nexport const ExplorePageToggleStates: (\n  data: MapGeoJsonData[]\n) => FeatureToggleState = (data) => {\n  return data.reduce(\n    (obj: any, item: any) => Object.assign(obj, { [item.id]: item.visible }),\n    {}\n  )\n}\n\nexport const NARRATIVES = [\n  {\n    name: 'Housing',\n    color: Theme.colors.orange,\n    visible: [\n      'greaterMattapanZoning',\n      'dotHpZoningSubdistricts',\n      'mattapanSquare',\n    ],\n  },\n  {\n    name: 'How is Land Used',\n    color: Theme.colors.green,\n    visible: ['cummimnsHwyCorridor', 'mattapanPlanBoundary', 'mattapanSquare'],\n  },\n  {\n    name: 'New to Mattapan',\n    color: Theme.colors.blue,\n    visible: [\n      'blueHillAveCorridor',\n      'greaterMattapanMergedPoly',\n      'zoningSubdistricts',\n    ],\n  },\n  {\n    name: 'Mattapan Love Stories',\n    color: Theme.colors.brown,\n    visible: ['subDistricts', 'riverStCorridor', 'mattapanZoningSubdistricts'],\n  },\n]\n","import styled from '@emotion/styled';\n\nconst Text = styled.span<{ color?: string }>`\n  color: ${ props => props.color };\n`;\n\nexport const Headline = styled(Text)`\n  font-family: ${ props => props.theme.fonts.fontFamily.header };\n  font-size: ${ props => props.theme.fonts.fontSize.headline };\n`;\n\nexport const SubHeadline = styled(Text)`\n  font-family: ${ props => props.theme.fonts.fontFamily.header };\n  font-size: ${ props => props.theme.fonts.fontSize.subHeadline };\n`;\n\nexport const TitleLarge = styled(Text)`\n  font-family: ${ props => props.theme.fonts.fontFamily.header };\n  font-size: ${ props => props.theme.fonts.fontSize.title };\n  font-weight: ${ props => props.theme.fonts.fontWeight.bold };\n`;\n\nexport const Title = styled(Text)`\n  font-family: ${ props => props.theme.fonts.fontFamily.header };\n  font-size: ${ props => props.theme.fonts.fontSize.title };\n`;\n\nexport const SubTitle = styled(Text)`\n  font-family: ${ props => props.theme.fonts.fontFamily.header };\n  font-size: ${ props => props.theme.fonts.fontSize.subtitle };\n`;\n\nexport const BodyLarge = styled(Text)`\n  font-family: ${ props => props.theme.fonts.fontFamily.body };\n  font-size: ${ props => props.theme.fonts.fontSize.large };\n`;\n\nexport const BodyRegular = styled(Text)`\n  font-family: ${ props => props.theme.fonts.fontFamily.body };\n  font-size: ${ props => props.theme.fonts.fontSize.regular};\n`;\n\nexport const BodySmall = styled(Text)`\n  font-family: ${ props => props.theme.fonts.fontFamily.body };\n  font-size: ${ props => props.theme.fonts.fontSize.small };\n`;\n","import styled from '@emotion/styled';\n\nexport const TogglePanelContainer = styled.div`\n  font-size: ${ props => props.theme.fonts.fontSize.regular };\n  background: #fff;\n  box-shadow: 0 0 4px ${ props => props.theme.colors.black };\n  margin: 24px;\n  padding: ${ props => props.theme.spacing.m } ${ props => props.theme.spacing.l };\n  outline: none;\n  cursor: auto;\n`;\n\nexport const CircleIcon = styled.div<{color: string}>`\n  -webkit-border-radius: 8px;\n  -moz-border-radius: 8px;\n  border-radius: 8px;\n  margin: 0 ${ props => props.theme.spacing.xs };\n  border: 1px solid ${ props => props.color};\n  background-color: ${ props => props.color };\n  width: ${ props => props.theme.spacing.s };\n  height: ${ props => props.theme.spacing.s };\n`;\n\nexport const ToggleItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import { TogglePanelContainer, CircleIcon, ToggleItemContainer } from '@/atoms/TogglePanelAtoms';\n\nexport const TogglePanel = ({ data, toggleState, toggleHandler }: TogglePanel) => {\n  return (\n    <TogglePanelContainer>\n      { data.map((toggleFeature: any) => (\n        <ToggleItemContainer key={ toggleFeature.id }>\n          <input\n            checked={ toggleState[toggleFeature.id] }\n            type='checkbox'\n            onChange={ () => toggleHandler(toggleFeature.id) }\n          />\n          <CircleIcon color={ toggleFeature.color } />\n          <span>{ toggleFeature.name }</span>\n        </ToggleItemContainer>\n      ))}\n    </TogglePanelContainer>\n  );\n};\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { Headline, BodySmall, SubHeadline, Title } from '@/atoms/Tokens';\nimport { Theme } from '@/theme/Theme';\nimport { NARRATIVES } from '@/data/ExplorePageData';\nimport { TogglePanel } from '@/molecules/TogglePanel';\n\nconst NarrativeButton = styled.button`\n  background: ${ props => props.theme.colors.white };\n  border: none;\n  border-radius: 4px;\n  margin: ${ props => props.theme.spacing.s } 0;\n  padding: ${ props => props.theme.spacing.m };\n  transition: all ease 0.2s;\n\n  &:hover {\n    background: silver;\n    color: white;\n  }\n`;\n\nconst NarrativeSelection = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NarrativeContainer = styled.div<{ color: string }>`\n  background: ${ props => props.color };\n  height: 100vh;\n  width: 550px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0 ${ props => props.theme.spacing.l };\n  transition: background ease 0.5s;\n`;\n\nconst NarrativeHeadline = styled(Headline)`\n  color: ${ props => props.theme.colors.white };\n  text-align: center;\n`;\n\nconst NarrativeSubHeadline = styled(SubHeadline)`\n  padding: ${ props => props.theme.spacing.m } 0;\n  color: ${ props => props.theme.colors.white };\n  text-align: center;\n`;\n\nconst SelectedNarrativeTitle = styled(Title)`\n  padding: ${ props => props.theme.spacing.m } 0;\n  color: ${ props => props.theme.colors.white };\n  text-align: center;\n`\n\nconst Narratives = ({ onNarrativeChange }: { onNarrativeChange: (color: string, name: string) => void }) => {\n  return (\n    <>\n      <NarrativeSubHeadline>Choose a narrative</NarrativeSubHeadline>\n      <NarrativeSelection>\n        { NARRATIVES.map((narrative: NarrativeType) => (\n          <NarrativeButton key={ narrative.name } onClick={ () => onNarrativeChange(narrative.color, narrative.name) }>\n            <BodySmall>{ narrative.name }</BodySmall>\n          </NarrativeButton>\n        )) }\n      </NarrativeSelection>\n    </>\n  );\n}\n\nconst NarrativePanel = ({ narrative, data, toggleState, toggleHandler, onNarrativeChange }: NarrativePanelType) => {\n  if (narrative) {\n    return (\n      <>\n        <SelectedNarrativeTitle>{ narrative }</SelectedNarrativeTitle>\n        <NarrativeButton onClick={ () => onNarrativeChange(Theme.colors.peach, '') }>Choose another Narrative</NarrativeButton>\n        <TogglePanel data={ data } toggleState={ toggleState } toggleHandler={ toggleHandler } />\n      </>\n    );\n  }\n\n  return (\n    <Narratives onNarrativeChange={ onNarrativeChange }/>\n  );\n}\n\nexport const ExplorePageNarratives = ({ narrative, data, toggleState, toggleHandler, setNarrative }: ExplorePageSidePanelType) => {\n  const [narrativeColor, setNarrativeColor] = React.useState(Theme.colors.peach);\n\n  const onNarrativeChange = (selectedNarrativeColor: string, selectedNarrative: string) => {\n    setNarrativeColor(selectedNarrativeColor);\n    setNarrative(selectedNarrative)\n  };\n\n  return (\n    <NarrativeContainer color={ narrativeColor }>\n      <NarrativeHeadline color={ Theme.colors.white }>EXPLORE</NarrativeHeadline>\n      <NarrativePanel narrative={ narrative } data={ data } toggleState={ toggleState } toggleHandler={ toggleHandler } onNarrativeChange={ onNarrativeChange }/>\n    </NarrativeContainer>\n  )\n};\n","import styled from '@emotion/styled';\nimport * as React from 'react';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\n\nimport { Theme } from '@/theme/Theme';\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_ENV;\n\nexport const Map = ({ startingCoordinates, children, mapStyle }: MapProps) => {\n  const [viewport, setViewport] = React.useState({\n    latitude: startingCoordinates?.lat ?? 42.286,\n    longitude: startingCoordinates?.lng ?? -71.088,\n    zoom: 12.1,\n    width: '100%',\n    height: '100%'\n  });\n\n  const settings = {\n    touchZoom: false,\n    doubleClickZoom: false,\n  };\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      {...settings}\n      mapboxApiAccessToken={MAPBOX_TOKEN}\n      onViewportChange={ (viewport: any) => setViewport(viewport)}\n      mapStyle={mapStyle ?? Theme.map.light}\n    >\n      { children }\n    </ReactMapGL>\n  )\n};\n\nexport const MapContainer = styled.div`\n\tposition: relative;\n  height: 90vh;\n\twidth: 80vw;\n\tbox-shadow: 0 0 2px 2px black;\n\tmargin: 0 auto;\n\tmargin-bottom: 24px;\n\n\t.map {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\toverflow: visible;\n\t}\n`;\n\nexport const MapTitle = styled.p`\n\tfont-family: ${ props => props.theme.fonts.fontFamily.header };\n\tfont-size: ${ props => props.theme.fonts.fontSize.subtitle };\n\ttext-align: center;\n\tmargin: 24px auto;\n`;\n\nexport const MapGeoJsonSource = ({ data, id, type, color, visible }: Omit<MapGeoJsonData, 'name'> ) => {\n  if (!visible) {\n    return null;\n  }\n\n  const paint = () => {\n    if (type === 'line') {\n      return { 'line-color': color };\n    }\n\n    if (type === 'fill') {\n      return { 'fill-color': color };\n    }\n  }\n\n  const layer: MapLayer = {\n    id: id,\n    type: type,\n    paint: paint(),\n  };\n\n  return (\n    <Source type='geojson' data={ data }>\n      <Layer { ...layer }/>\n    </Source>\n  );\n};\n\nexport function Pin({ size = 20, color = Theme.colors.orange}: {size: number, color: string}) {\n  const ICON = 'M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6z';\n  \n  const pinStyle = {\n    // cursor: 'pointer',\n    fill: color,\n    stroke: 'none',\n    display: 'block',\n  };\n\n  return (\n    <svg height={size} viewBox=\"0 0 16 16\" style={pinStyle}>\n      <path d={ICON} />\n    </svg>\n  );\n};","import { MapGeoJsonSource } from \"@/atoms/MapAtoms\"\n\nexport const MapLayers = ({ geoJsonData, toggleState }: { geoJsonData: MapGeoJsonData[], toggleState: FeatureToggleState }) => {\n  return (\n    <>\n      { geoJsonData.map((data) =>\n        <MapGeoJsonSource\n          key={ data.id }\n          data= { data.data }\n          id={ data.id }\n          type={ data.type }\n          color={ data.color }\n          visible={ toggleState[data.id] }\n        />\n      )}\n    </>\n  );\n};\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nconst defaultOptions = {} as const;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  bpchar: any;\n};\n\n/** columns and relationships of \"Boundaries\" */\nexport type Boundaries = {\n  __typename?: 'Boundaries';\n  color?: Maybe<Scalars['bpchar']>;\n  file: Scalars['String'];\n  id: Scalars['Int'];\n  name: Scalars['String'];\n  /** An array relationship */\n  narratives: Array<Boundary_Narrative_View>;\n  /** An aggregate relationship */\n  narratives_aggregate: Boundary_Narrative_View_Aggregate;\n  /** An array relationship */\n  visibles: Array<Visibles>;\n  /** An aggregate relationship */\n  visibles_aggregate: Visibles_Aggregate;\n};\n\n\n/** columns and relationships of \"Boundaries\" */\nexport type BoundariesNarrativesArgs = {\n  distinct_on?: InputMaybe<Array<Boundary_Narrative_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundary_Narrative_View_Order_By>>;\n  where?: InputMaybe<Boundary_Narrative_View_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"Boundaries\" */\nexport type BoundariesNarratives_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Boundary_Narrative_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundary_Narrative_View_Order_By>>;\n  where?: InputMaybe<Boundary_Narrative_View_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"Boundaries\" */\nexport type BoundariesVisiblesArgs = {\n  distinct_on?: InputMaybe<Array<Visibles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Visibles_Order_By>>;\n  where?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"Boundaries\" */\nexport type BoundariesVisibles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Visibles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Visibles_Order_By>>;\n  where?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n/** aggregated selection of \"Boundaries\" */\nexport type Boundaries_Aggregate = {\n  __typename?: 'Boundaries_aggregate';\n  aggregate?: Maybe<Boundaries_Aggregate_Fields>;\n  nodes: Array<Boundaries>;\n};\n\n/** aggregate fields of \"Boundaries\" */\nexport type Boundaries_Aggregate_Fields = {\n  __typename?: 'Boundaries_aggregate_fields';\n  avg?: Maybe<Boundaries_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Boundaries_Max_Fields>;\n  min?: Maybe<Boundaries_Min_Fields>;\n  stddev?: Maybe<Boundaries_Stddev_Fields>;\n  stddev_pop?: Maybe<Boundaries_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Boundaries_Stddev_Samp_Fields>;\n  sum?: Maybe<Boundaries_Sum_Fields>;\n  var_pop?: Maybe<Boundaries_Var_Pop_Fields>;\n  var_samp?: Maybe<Boundaries_Var_Samp_Fields>;\n  variance?: Maybe<Boundaries_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"Boundaries\" */\nexport type Boundaries_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Boundaries_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Boundaries_Avg_Fields = {\n  __typename?: 'Boundaries_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"Boundaries\". All fields are combined with a logical 'AND'. */\nexport type Boundaries_Bool_Exp = {\n  _and?: InputMaybe<Array<Boundaries_Bool_Exp>>;\n  _not?: InputMaybe<Boundaries_Bool_Exp>;\n  _or?: InputMaybe<Array<Boundaries_Bool_Exp>>;\n  color?: InputMaybe<Bpchar_Comparison_Exp>;\n  file?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  name?: InputMaybe<String_Comparison_Exp>;\n  narratives?: InputMaybe<Boundary_Narrative_View_Bool_Exp>;\n  visibles?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Boundaries_Max_Fields = {\n  __typename?: 'Boundaries_max_fields';\n  color?: Maybe<Scalars['bpchar']>;\n  file?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** aggregate min on columns */\nexport type Boundaries_Min_Fields = {\n  __typename?: 'Boundaries_min_fields';\n  color?: Maybe<Scalars['bpchar']>;\n  file?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** response of any mutation on the table \"Boundaries\" */\nexport type Boundaries_Mutation_Response = {\n  __typename?: 'Boundaries_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Boundaries>;\n};\n\n/** Ordering options when selecting data from \"Boundaries\". */\nexport type Boundaries_Order_By = {\n  color?: InputMaybe<Order_By>;\n  file?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n  narratives_aggregate?: InputMaybe<Boundary_Narrative_View_Aggregate_Order_By>;\n  visibles_aggregate?: InputMaybe<Visibles_Aggregate_Order_By>;\n};\n\n/** primary key columns input for table: Boundaries */\nexport type Boundaries_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"Boundaries\" */\nexport enum Boundaries_Select_Column {\n  /** column name */\n  Color = 'color',\n  /** column name */\n  File = 'file',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** input type for updating data in table \"Boundaries\" */\nexport type Boundaries_Set_Input = {\n  color?: InputMaybe<Scalars['bpchar']>;\n  file?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Boundaries_Stddev_Fields = {\n  __typename?: 'Boundaries_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Boundaries_Stddev_Pop_Fields = {\n  __typename?: 'Boundaries_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Boundaries_Stddev_Samp_Fields = {\n  __typename?: 'Boundaries_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Boundaries_Sum_Fields = {\n  __typename?: 'Boundaries_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Boundaries_Var_Pop_Fields = {\n  __typename?: 'Boundaries_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Boundaries_Var_Samp_Fields = {\n  __typename?: 'Boundaries_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Boundaries_Variance_Fields = {\n  __typename?: 'Boundaries_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'. */\nexport type Int_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Int']>;\n  _gt?: InputMaybe<Scalars['Int']>;\n  _gte?: InputMaybe<Scalars['Int']>;\n  _in?: InputMaybe<Array<Scalars['Int']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['Int']>;\n  _lte?: InputMaybe<Scalars['Int']>;\n  _neq?: InputMaybe<Scalars['Int']>;\n  _nin?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** columns and relationships of \"Narratives\" */\nexport type Narratives = {\n  __typename?: 'Narratives';\n  /** An array relationship */\n  boundaries: Array<Narrative_Boundary_View>;\n  /** An aggregate relationship */\n  boundaries_aggregate: Narrative_Boundary_View_Aggregate;\n  color: Scalars['bpchar'];\n  id: Scalars['Int'];\n  name: Scalars['bpchar'];\n  /** An array relationship */\n  visibles: Array<Visibles>;\n  /** An aggregate relationship */\n  visibles_aggregate: Visibles_Aggregate;\n};\n\n\n/** columns and relationships of \"Narratives\" */\nexport type NarrativesBoundariesArgs = {\n  distinct_on?: InputMaybe<Array<Narrative_Boundary_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narrative_Boundary_View_Order_By>>;\n  where?: InputMaybe<Narrative_Boundary_View_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"Narratives\" */\nexport type NarrativesBoundaries_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Narrative_Boundary_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narrative_Boundary_View_Order_By>>;\n  where?: InputMaybe<Narrative_Boundary_View_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"Narratives\" */\nexport type NarrativesVisiblesArgs = {\n  distinct_on?: InputMaybe<Array<Visibles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Visibles_Order_By>>;\n  where?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"Narratives\" */\nexport type NarrativesVisibles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Visibles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Visibles_Order_By>>;\n  where?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n/** aggregated selection of \"Narratives\" */\nexport type Narratives_Aggregate = {\n  __typename?: 'Narratives_aggregate';\n  aggregate?: Maybe<Narratives_Aggregate_Fields>;\n  nodes: Array<Narratives>;\n};\n\n/** aggregate fields of \"Narratives\" */\nexport type Narratives_Aggregate_Fields = {\n  __typename?: 'Narratives_aggregate_fields';\n  avg?: Maybe<Narratives_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Narratives_Max_Fields>;\n  min?: Maybe<Narratives_Min_Fields>;\n  stddev?: Maybe<Narratives_Stddev_Fields>;\n  stddev_pop?: Maybe<Narratives_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Narratives_Stddev_Samp_Fields>;\n  sum?: Maybe<Narratives_Sum_Fields>;\n  var_pop?: Maybe<Narratives_Var_Pop_Fields>;\n  var_samp?: Maybe<Narratives_Var_Samp_Fields>;\n  variance?: Maybe<Narratives_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"Narratives\" */\nexport type Narratives_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Narratives_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Narratives_Avg_Fields = {\n  __typename?: 'Narratives_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"Narratives\". All fields are combined with a logical 'AND'. */\nexport type Narratives_Bool_Exp = {\n  _and?: InputMaybe<Array<Narratives_Bool_Exp>>;\n  _not?: InputMaybe<Narratives_Bool_Exp>;\n  _or?: InputMaybe<Array<Narratives_Bool_Exp>>;\n  boundaries?: InputMaybe<Narrative_Boundary_View_Bool_Exp>;\n  color?: InputMaybe<Bpchar_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  name?: InputMaybe<Bpchar_Comparison_Exp>;\n  visibles?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Narratives_Max_Fields = {\n  __typename?: 'Narratives_max_fields';\n  color?: Maybe<Scalars['bpchar']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['bpchar']>;\n};\n\n/** aggregate min on columns */\nexport type Narratives_Min_Fields = {\n  __typename?: 'Narratives_min_fields';\n  color?: Maybe<Scalars['bpchar']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['bpchar']>;\n};\n\n/** response of any mutation on the table \"Narratives\" */\nexport type Narratives_Mutation_Response = {\n  __typename?: 'Narratives_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Narratives>;\n};\n\n/** Ordering options when selecting data from \"Narratives\". */\nexport type Narratives_Order_By = {\n  boundaries_aggregate?: InputMaybe<Narrative_Boundary_View_Aggregate_Order_By>;\n  color?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n  visibles_aggregate?: InputMaybe<Visibles_Aggregate_Order_By>;\n};\n\n/** primary key columns input for table: Narratives */\nexport type Narratives_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"Narratives\" */\nexport enum Narratives_Select_Column {\n  /** column name */\n  Color = 'color',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** input type for updating data in table \"Narratives\" */\nexport type Narratives_Set_Input = {\n  color?: InputMaybe<Scalars['bpchar']>;\n  name?: InputMaybe<Scalars['bpchar']>;\n};\n\n/** aggregate stddev on columns */\nexport type Narratives_Stddev_Fields = {\n  __typename?: 'Narratives_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Narratives_Stddev_Pop_Fields = {\n  __typename?: 'Narratives_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Narratives_Stddev_Samp_Fields = {\n  __typename?: 'Narratives_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Narratives_Sum_Fields = {\n  __typename?: 'Narratives_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Narratives_Var_Pop_Fields = {\n  __typename?: 'Narratives_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Narratives_Var_Samp_Fields = {\n  __typename?: 'Narratives_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Narratives_Variance_Fields = {\n  __typename?: 'Narratives_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'. */\nexport type String_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['String']>;\n  _gt?: InputMaybe<Scalars['String']>;\n  _gte?: InputMaybe<Scalars['String']>;\n  /** does the column match the given case-insensitive pattern */\n  _ilike?: InputMaybe<Scalars['String']>;\n  _in?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column match the given POSIX regular expression, case insensitive */\n  _iregex?: InputMaybe<Scalars['String']>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  /** does the column match the given pattern */\n  _like?: InputMaybe<Scalars['String']>;\n  _lt?: InputMaybe<Scalars['String']>;\n  _lte?: InputMaybe<Scalars['String']>;\n  _neq?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given case-insensitive pattern */\n  _nilike?: InputMaybe<Scalars['String']>;\n  _nin?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column NOT match the given POSIX regular expression, case insensitive */\n  _niregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given pattern */\n  _nlike?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given POSIX regular expression, case sensitive */\n  _nregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given SQL regular expression */\n  _nsimilar?: InputMaybe<Scalars['String']>;\n  /** does the column match the given POSIX regular expression, case sensitive */\n  _regex?: InputMaybe<Scalars['String']>;\n  /** does the column match the given SQL regular expression */\n  _similar?: InputMaybe<Scalars['String']>;\n};\n\n/** columns and relationships of \"Videos\" */\nexport type Videos = {\n  __typename?: 'Videos';\n  author: Scalars['String'];\n  id: Scalars['Int'];\n  src: Scalars['String'];\n  transcript?: Maybe<Scalars['String']>;\n};\n\n/** aggregated selection of \"Videos\" */\nexport type Videos_Aggregate = {\n  __typename?: 'Videos_aggregate';\n  aggregate?: Maybe<Videos_Aggregate_Fields>;\n  nodes: Array<Videos>;\n};\n\n/** aggregate fields of \"Videos\" */\nexport type Videos_Aggregate_Fields = {\n  __typename?: 'Videos_aggregate_fields';\n  avg?: Maybe<Videos_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Videos_Max_Fields>;\n  min?: Maybe<Videos_Min_Fields>;\n  stddev?: Maybe<Videos_Stddev_Fields>;\n  stddev_pop?: Maybe<Videos_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Videos_Stddev_Samp_Fields>;\n  sum?: Maybe<Videos_Sum_Fields>;\n  var_pop?: Maybe<Videos_Var_Pop_Fields>;\n  var_samp?: Maybe<Videos_Var_Samp_Fields>;\n  variance?: Maybe<Videos_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"Videos\" */\nexport type Videos_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Videos_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Videos_Avg_Fields = {\n  __typename?: 'Videos_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"Videos\". All fields are combined with a logical 'AND'. */\nexport type Videos_Bool_Exp = {\n  _and?: InputMaybe<Array<Videos_Bool_Exp>>;\n  _not?: InputMaybe<Videos_Bool_Exp>;\n  _or?: InputMaybe<Array<Videos_Bool_Exp>>;\n  author?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  src?: InputMaybe<String_Comparison_Exp>;\n  transcript?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Videos_Max_Fields = {\n  __typename?: 'Videos_max_fields';\n  author?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  src?: Maybe<Scalars['String']>;\n  transcript?: Maybe<Scalars['String']>;\n};\n\n/** aggregate min on columns */\nexport type Videos_Min_Fields = {\n  __typename?: 'Videos_min_fields';\n  author?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  src?: Maybe<Scalars['String']>;\n  transcript?: Maybe<Scalars['String']>;\n};\n\n/** response of any mutation on the table \"Videos\" */\nexport type Videos_Mutation_Response = {\n  __typename?: 'Videos_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Videos>;\n};\n\n/** Ordering options when selecting data from \"Videos\". */\nexport type Videos_Order_By = {\n  author?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  src?: InputMaybe<Order_By>;\n  transcript?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: Videos */\nexport type Videos_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"Videos\" */\nexport enum Videos_Select_Column {\n  /** column name */\n  Author = 'author',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Src = 'src',\n  /** column name */\n  Transcript = 'transcript'\n}\n\n/** input type for updating data in table \"Videos\" */\nexport type Videos_Set_Input = {\n  author?: InputMaybe<Scalars['String']>;\n  src?: InputMaybe<Scalars['String']>;\n  transcript?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Videos_Stddev_Fields = {\n  __typename?: 'Videos_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Videos_Stddev_Pop_Fields = {\n  __typename?: 'Videos_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Videos_Stddev_Samp_Fields = {\n  __typename?: 'Videos_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Videos_Sum_Fields = {\n  __typename?: 'Videos_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Videos_Var_Pop_Fields = {\n  __typename?: 'Videos_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Videos_Var_Samp_Fields = {\n  __typename?: 'Videos_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Videos_Variance_Fields = {\n  __typename?: 'Videos_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** columns and relationships of \"Visibles\" */\nexport type Visibles = {\n  __typename?: 'Visibles';\n  /** An object relationship */\n  boundary: Boundaries;\n  boundary_id: Scalars['Int'];\n  /** A computed field, executes function \"visibles_id\" */\n  id?: Maybe<Scalars['String']>;\n  /** An object relationship */\n  narrative: Narratives;\n  narrative_id: Scalars['Int'];\n};\n\n/** aggregated selection of \"Visibles\" */\nexport type Visibles_Aggregate = {\n  __typename?: 'Visibles_aggregate';\n  aggregate?: Maybe<Visibles_Aggregate_Fields>;\n  nodes: Array<Visibles>;\n};\n\n/** aggregate fields of \"Visibles\" */\nexport type Visibles_Aggregate_Fields = {\n  __typename?: 'Visibles_aggregate_fields';\n  avg?: Maybe<Visibles_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Visibles_Max_Fields>;\n  min?: Maybe<Visibles_Min_Fields>;\n  stddev?: Maybe<Visibles_Stddev_Fields>;\n  stddev_pop?: Maybe<Visibles_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Visibles_Stddev_Samp_Fields>;\n  sum?: Maybe<Visibles_Sum_Fields>;\n  var_pop?: Maybe<Visibles_Var_Pop_Fields>;\n  var_samp?: Maybe<Visibles_Var_Samp_Fields>;\n  variance?: Maybe<Visibles_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"Visibles\" */\nexport type Visibles_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Visibles_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"Visibles\" */\nexport type Visibles_Aggregate_Order_By = {\n  avg?: InputMaybe<Visibles_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Visibles_Max_Order_By>;\n  min?: InputMaybe<Visibles_Min_Order_By>;\n  stddev?: InputMaybe<Visibles_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Visibles_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Visibles_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Visibles_Sum_Order_By>;\n  var_pop?: InputMaybe<Visibles_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Visibles_Var_Samp_Order_By>;\n  variance?: InputMaybe<Visibles_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Visibles_Avg_Fields = {\n  __typename?: 'Visibles_avg_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by avg() on columns of table \"Visibles\" */\nexport type Visibles_Avg_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"Visibles\". All fields are combined with a logical 'AND'. */\nexport type Visibles_Bool_Exp = {\n  _and?: InputMaybe<Array<Visibles_Bool_Exp>>;\n  _not?: InputMaybe<Visibles_Bool_Exp>;\n  _or?: InputMaybe<Array<Visibles_Bool_Exp>>;\n  boundary?: InputMaybe<Boundaries_Bool_Exp>;\n  boundary_id?: InputMaybe<Int_Comparison_Exp>;\n  id?: InputMaybe<String_Comparison_Exp>;\n  narrative?: InputMaybe<Narratives_Bool_Exp>;\n  narrative_id?: InputMaybe<Int_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"Visibles\" */\nexport enum Visibles_Constraint {\n  /** unique or primary key constraint */\n  VisiblesPkey = 'Visibles_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"Visibles\" */\nexport type Visibles_Inc_Input = {\n  boundary_id?: InputMaybe<Scalars['Int']>;\n  narrative_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"Visibles\" */\nexport type Visibles_Insert_Input = {\n  boundary_id?: InputMaybe<Scalars['Int']>;\n  narrative_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate max on columns */\nexport type Visibles_Max_Fields = {\n  __typename?: 'Visibles_max_fields';\n  boundary_id?: Maybe<Scalars['Int']>;\n  narrative_id?: Maybe<Scalars['Int']>;\n};\n\n/** order by max() on columns of table \"Visibles\" */\nexport type Visibles_Max_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Visibles_Min_Fields = {\n  __typename?: 'Visibles_min_fields';\n  boundary_id?: Maybe<Scalars['Int']>;\n  narrative_id?: Maybe<Scalars['Int']>;\n};\n\n/** order by min() on columns of table \"Visibles\" */\nexport type Visibles_Min_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"Visibles\" */\nexport type Visibles_Mutation_Response = {\n  __typename?: 'Visibles_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Visibles>;\n};\n\n/** on_conflict condition type for table \"Visibles\" */\nexport type Visibles_On_Conflict = {\n  constraint: Visibles_Constraint;\n  update_columns?: Array<Visibles_Update_Column>;\n  where?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"Visibles\". */\nexport type Visibles_Order_By = {\n  boundary?: InputMaybe<Boundaries_Order_By>;\n  boundary_id?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  narrative?: InputMaybe<Narratives_Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: Visibles */\nexport type Visibles_Pk_Columns_Input = {\n  boundary_id: Scalars['Int'];\n  narrative_id: Scalars['Int'];\n};\n\n/** select columns of table \"Visibles\" */\nexport enum Visibles_Select_Column {\n  /** column name */\n  BoundaryId = 'boundary_id',\n  /** column name */\n  NarrativeId = 'narrative_id'\n}\n\n/** input type for updating data in table \"Visibles\" */\nexport type Visibles_Set_Input = {\n  boundary_id?: InputMaybe<Scalars['Int']>;\n  narrative_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate stddev on columns */\nexport type Visibles_Stddev_Fields = {\n  __typename?: 'Visibles_stddev_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev() on columns of table \"Visibles\" */\nexport type Visibles_Stddev_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Visibles_Stddev_Pop_Fields = {\n  __typename?: 'Visibles_stddev_pop_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_pop() on columns of table \"Visibles\" */\nexport type Visibles_Stddev_Pop_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Visibles_Stddev_Samp_Fields = {\n  __typename?: 'Visibles_stddev_samp_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_samp() on columns of table \"Visibles\" */\nexport type Visibles_Stddev_Samp_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate sum on columns */\nexport type Visibles_Sum_Fields = {\n  __typename?: 'Visibles_sum_fields';\n  boundary_id?: Maybe<Scalars['Int']>;\n  narrative_id?: Maybe<Scalars['Int']>;\n};\n\n/** order by sum() on columns of table \"Visibles\" */\nexport type Visibles_Sum_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** update columns of table \"Visibles\" */\nexport enum Visibles_Update_Column {\n  /** column name */\n  BoundaryId = 'boundary_id',\n  /** column name */\n  NarrativeId = 'narrative_id'\n}\n\n/** aggregate var_pop on columns */\nexport type Visibles_Var_Pop_Fields = {\n  __typename?: 'Visibles_var_pop_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_pop() on columns of table \"Visibles\" */\nexport type Visibles_Var_Pop_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Visibles_Var_Samp_Fields = {\n  __typename?: 'Visibles_var_samp_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_samp() on columns of table \"Visibles\" */\nexport type Visibles_Var_Samp_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Visibles_Variance_Fields = {\n  __typename?: 'Visibles_variance_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by variance() on columns of table \"Visibles\" */\nexport type Visibles_Variance_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** columns and relationships of \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View = {\n  __typename?: 'boundary_narrative_view';\n  boundary_id?: Maybe<Scalars['Int']>;\n  color?: Maybe<Scalars['bpchar']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['bpchar']>;\n};\n\n/** aggregated selection of \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Aggregate = {\n  __typename?: 'boundary_narrative_view_aggregate';\n  aggregate?: Maybe<Boundary_Narrative_View_Aggregate_Fields>;\n  nodes: Array<Boundary_Narrative_View>;\n};\n\n/** aggregate fields of \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Aggregate_Fields = {\n  __typename?: 'boundary_narrative_view_aggregate_fields';\n  avg?: Maybe<Boundary_Narrative_View_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Boundary_Narrative_View_Max_Fields>;\n  min?: Maybe<Boundary_Narrative_View_Min_Fields>;\n  stddev?: Maybe<Boundary_Narrative_View_Stddev_Fields>;\n  stddev_pop?: Maybe<Boundary_Narrative_View_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Boundary_Narrative_View_Stddev_Samp_Fields>;\n  sum?: Maybe<Boundary_Narrative_View_Sum_Fields>;\n  var_pop?: Maybe<Boundary_Narrative_View_Var_Pop_Fields>;\n  var_samp?: Maybe<Boundary_Narrative_View_Var_Samp_Fields>;\n  variance?: Maybe<Boundary_Narrative_View_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Boundary_Narrative_View_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Aggregate_Order_By = {\n  avg?: InputMaybe<Boundary_Narrative_View_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Boundary_Narrative_View_Max_Order_By>;\n  min?: InputMaybe<Boundary_Narrative_View_Min_Order_By>;\n  stddev?: InputMaybe<Boundary_Narrative_View_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Boundary_Narrative_View_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Boundary_Narrative_View_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Boundary_Narrative_View_Sum_Order_By>;\n  var_pop?: InputMaybe<Boundary_Narrative_View_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Boundary_Narrative_View_Var_Samp_Order_By>;\n  variance?: InputMaybe<Boundary_Narrative_View_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Boundary_Narrative_View_Avg_Fields = {\n  __typename?: 'boundary_narrative_view_avg_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by avg() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Avg_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"boundary_narrative_view\". All fields are combined with a logical 'AND'. */\nexport type Boundary_Narrative_View_Bool_Exp = {\n  _and?: InputMaybe<Array<Boundary_Narrative_View_Bool_Exp>>;\n  _not?: InputMaybe<Boundary_Narrative_View_Bool_Exp>;\n  _or?: InputMaybe<Array<Boundary_Narrative_View_Bool_Exp>>;\n  boundary_id?: InputMaybe<Int_Comparison_Exp>;\n  color?: InputMaybe<Bpchar_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  name?: InputMaybe<Bpchar_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Boundary_Narrative_View_Max_Fields = {\n  __typename?: 'boundary_narrative_view_max_fields';\n  boundary_id?: Maybe<Scalars['Int']>;\n  color?: Maybe<Scalars['bpchar']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['bpchar']>;\n};\n\n/** order by max() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Max_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  color?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Boundary_Narrative_View_Min_Fields = {\n  __typename?: 'boundary_narrative_view_min_fields';\n  boundary_id?: Maybe<Scalars['Int']>;\n  color?: Maybe<Scalars['bpchar']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['bpchar']>;\n};\n\n/** order by min() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Min_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  color?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"boundary_narrative_view\". */\nexport type Boundary_Narrative_View_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  color?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"boundary_narrative_view\" */\nexport enum Boundary_Narrative_View_Select_Column {\n  /** column name */\n  BoundaryId = 'boundary_id',\n  /** column name */\n  Color = 'color',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** aggregate stddev on columns */\nexport type Boundary_Narrative_View_Stddev_Fields = {\n  __typename?: 'boundary_narrative_view_stddev_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Stddev_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Boundary_Narrative_View_Stddev_Pop_Fields = {\n  __typename?: 'boundary_narrative_view_stddev_pop_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_pop() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Stddev_Pop_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Boundary_Narrative_View_Stddev_Samp_Fields = {\n  __typename?: 'boundary_narrative_view_stddev_samp_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_samp() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Stddev_Samp_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate sum on columns */\nexport type Boundary_Narrative_View_Sum_Fields = {\n  __typename?: 'boundary_narrative_view_sum_fields';\n  boundary_id?: Maybe<Scalars['Int']>;\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** order by sum() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Sum_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Boundary_Narrative_View_Var_Pop_Fields = {\n  __typename?: 'boundary_narrative_view_var_pop_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_pop() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Var_Pop_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Boundary_Narrative_View_Var_Samp_Fields = {\n  __typename?: 'boundary_narrative_view_var_samp_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_samp() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Var_Samp_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Boundary_Narrative_View_Variance_Fields = {\n  __typename?: 'boundary_narrative_view_variance_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by variance() on columns of table \"boundary_narrative_view\" */\nexport type Boundary_Narrative_View_Variance_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to compare columns of type \"bpchar\". All fields are combined with logical 'AND'. */\nexport type Bpchar_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['bpchar']>;\n  _gt?: InputMaybe<Scalars['bpchar']>;\n  _gte?: InputMaybe<Scalars['bpchar']>;\n  /** does the column match the given case-insensitive pattern */\n  _ilike?: InputMaybe<Scalars['bpchar']>;\n  _in?: InputMaybe<Array<Scalars['bpchar']>>;\n  /** does the column match the given POSIX regular expression, case insensitive */\n  _iregex?: InputMaybe<Scalars['bpchar']>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  /** does the column match the given pattern */\n  _like?: InputMaybe<Scalars['bpchar']>;\n  _lt?: InputMaybe<Scalars['bpchar']>;\n  _lte?: InputMaybe<Scalars['bpchar']>;\n  _neq?: InputMaybe<Scalars['bpchar']>;\n  /** does the column NOT match the given case-insensitive pattern */\n  _nilike?: InputMaybe<Scalars['bpchar']>;\n  _nin?: InputMaybe<Array<Scalars['bpchar']>>;\n  /** does the column NOT match the given POSIX regular expression, case insensitive */\n  _niregex?: InputMaybe<Scalars['bpchar']>;\n  /** does the column NOT match the given pattern */\n  _nlike?: InputMaybe<Scalars['bpchar']>;\n  /** does the column NOT match the given POSIX regular expression, case sensitive */\n  _nregex?: InputMaybe<Scalars['bpchar']>;\n  /** does the column NOT match the given SQL regular expression */\n  _nsimilar?: InputMaybe<Scalars['bpchar']>;\n  /** does the column match the given POSIX regular expression, case sensitive */\n  _regex?: InputMaybe<Scalars['bpchar']>;\n  /** does the column match the given SQL regular expression */\n  _similar?: InputMaybe<Scalars['bpchar']>;\n};\n\n/** mutation root */\nexport type Mutation_Root = {\n  __typename?: 'mutation_root';\n  /** delete data from the table: \"Boundaries\" */\n  delete_Boundaries?: Maybe<Boundaries_Mutation_Response>;\n  /** delete single row from the table: \"Boundaries\" */\n  delete_Boundaries_by_pk?: Maybe<Boundaries>;\n  /** delete data from the table: \"Visibles\" */\n  delete_Visibles?: Maybe<Visibles_Mutation_Response>;\n  /** delete single row from the table: \"Visibles\" */\n  delete_Visibles_by_pk?: Maybe<Visibles>;\n  /** insert data into the table: \"Visibles\" */\n  insert_Visibles?: Maybe<Visibles_Mutation_Response>;\n  /** insert a single row into the table: \"Visibles\" */\n  insert_Visibles_one?: Maybe<Visibles>;\n  /** update data of the table: \"Boundaries\" */\n  update_Boundaries?: Maybe<Boundaries_Mutation_Response>;\n  /** update single row of the table: \"Boundaries\" */\n  update_Boundaries_by_pk?: Maybe<Boundaries>;\n  /** update data of the table: \"Narratives\" */\n  update_Narratives?: Maybe<Narratives_Mutation_Response>;\n  /** update single row of the table: \"Narratives\" */\n  update_Narratives_by_pk?: Maybe<Narratives>;\n  /** update data of the table: \"Videos\" */\n  update_Videos?: Maybe<Videos_Mutation_Response>;\n  /** update single row of the table: \"Videos\" */\n  update_Videos_by_pk?: Maybe<Videos>;\n  /** update data of the table: \"Visibles\" */\n  update_Visibles?: Maybe<Visibles_Mutation_Response>;\n  /** update single row of the table: \"Visibles\" */\n  update_Visibles_by_pk?: Maybe<Visibles>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_BoundariesArgs = {\n  where: Boundaries_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Boundaries_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_VisiblesArgs = {\n  where: Visibles_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Visibles_By_PkArgs = {\n  boundary_id: Scalars['Int'];\n  narrative_id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_VisiblesArgs = {\n  objects: Array<Visibles_Insert_Input>;\n  on_conflict?: InputMaybe<Visibles_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Visibles_OneArgs = {\n  object: Visibles_Insert_Input;\n  on_conflict?: InputMaybe<Visibles_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_BoundariesArgs = {\n  _set?: InputMaybe<Boundaries_Set_Input>;\n  where: Boundaries_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Boundaries_By_PkArgs = {\n  _set?: InputMaybe<Boundaries_Set_Input>;\n  pk_columns: Boundaries_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_NarrativesArgs = {\n  _set?: InputMaybe<Narratives_Set_Input>;\n  where: Narratives_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Narratives_By_PkArgs = {\n  _set?: InputMaybe<Narratives_Set_Input>;\n  pk_columns: Narratives_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_VideosArgs = {\n  _set?: InputMaybe<Videos_Set_Input>;\n  where: Videos_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Videos_By_PkArgs = {\n  _set?: InputMaybe<Videos_Set_Input>;\n  pk_columns: Videos_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_VisiblesArgs = {\n  _inc?: InputMaybe<Visibles_Inc_Input>;\n  _set?: InputMaybe<Visibles_Set_Input>;\n  where: Visibles_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Visibles_By_PkArgs = {\n  _inc?: InputMaybe<Visibles_Inc_Input>;\n  _set?: InputMaybe<Visibles_Set_Input>;\n  pk_columns: Visibles_Pk_Columns_Input;\n};\n\n/** columns and relationships of \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View = {\n  __typename?: 'narrative_boundary_view';\n  boundary_id?: Maybe<Scalars['Int']>;\n  color?: Maybe<Scalars['bpchar']>;\n  file?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  narrative_id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregated selection of \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Aggregate = {\n  __typename?: 'narrative_boundary_view_aggregate';\n  aggregate?: Maybe<Narrative_Boundary_View_Aggregate_Fields>;\n  nodes: Array<Narrative_Boundary_View>;\n};\n\n/** aggregate fields of \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Aggregate_Fields = {\n  __typename?: 'narrative_boundary_view_aggregate_fields';\n  avg?: Maybe<Narrative_Boundary_View_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Narrative_Boundary_View_Max_Fields>;\n  min?: Maybe<Narrative_Boundary_View_Min_Fields>;\n  stddev?: Maybe<Narrative_Boundary_View_Stddev_Fields>;\n  stddev_pop?: Maybe<Narrative_Boundary_View_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Narrative_Boundary_View_Stddev_Samp_Fields>;\n  sum?: Maybe<Narrative_Boundary_View_Sum_Fields>;\n  var_pop?: Maybe<Narrative_Boundary_View_Var_Pop_Fields>;\n  var_samp?: Maybe<Narrative_Boundary_View_Var_Samp_Fields>;\n  variance?: Maybe<Narrative_Boundary_View_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Narrative_Boundary_View_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Aggregate_Order_By = {\n  avg?: InputMaybe<Narrative_Boundary_View_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Narrative_Boundary_View_Max_Order_By>;\n  min?: InputMaybe<Narrative_Boundary_View_Min_Order_By>;\n  stddev?: InputMaybe<Narrative_Boundary_View_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Narrative_Boundary_View_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Narrative_Boundary_View_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Narrative_Boundary_View_Sum_Order_By>;\n  var_pop?: InputMaybe<Narrative_Boundary_View_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Narrative_Boundary_View_Var_Samp_Order_By>;\n  variance?: InputMaybe<Narrative_Boundary_View_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Narrative_Boundary_View_Avg_Fields = {\n  __typename?: 'narrative_boundary_view_avg_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by avg() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Avg_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"narrative_boundary_view\". All fields are combined with a logical 'AND'. */\nexport type Narrative_Boundary_View_Bool_Exp = {\n  _and?: InputMaybe<Array<Narrative_Boundary_View_Bool_Exp>>;\n  _not?: InputMaybe<Narrative_Boundary_View_Bool_Exp>;\n  _or?: InputMaybe<Array<Narrative_Boundary_View_Bool_Exp>>;\n  boundary_id?: InputMaybe<Int_Comparison_Exp>;\n  color?: InputMaybe<Bpchar_Comparison_Exp>;\n  file?: InputMaybe<String_Comparison_Exp>;\n  name?: InputMaybe<String_Comparison_Exp>;\n  narrative_id?: InputMaybe<Int_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Narrative_Boundary_View_Max_Fields = {\n  __typename?: 'narrative_boundary_view_max_fields';\n  boundary_id?: Maybe<Scalars['Int']>;\n  color?: Maybe<Scalars['bpchar']>;\n  file?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  narrative_id?: Maybe<Scalars['Int']>;\n};\n\n/** order by max() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Max_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  color?: InputMaybe<Order_By>;\n  file?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Narrative_Boundary_View_Min_Fields = {\n  __typename?: 'narrative_boundary_view_min_fields';\n  boundary_id?: Maybe<Scalars['Int']>;\n  color?: Maybe<Scalars['bpchar']>;\n  file?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  narrative_id?: Maybe<Scalars['Int']>;\n};\n\n/** order by min() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Min_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  color?: InputMaybe<Order_By>;\n  file?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"narrative_boundary_view\". */\nexport type Narrative_Boundary_View_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  color?: InputMaybe<Order_By>;\n  file?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"narrative_boundary_view\" */\nexport enum Narrative_Boundary_View_Select_Column {\n  /** column name */\n  BoundaryId = 'boundary_id',\n  /** column name */\n  Color = 'color',\n  /** column name */\n  File = 'file',\n  /** column name */\n  Name = 'name',\n  /** column name */\n  NarrativeId = 'narrative_id'\n}\n\n/** aggregate stddev on columns */\nexport type Narrative_Boundary_View_Stddev_Fields = {\n  __typename?: 'narrative_boundary_view_stddev_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Stddev_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Narrative_Boundary_View_Stddev_Pop_Fields = {\n  __typename?: 'narrative_boundary_view_stddev_pop_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_pop() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Stddev_Pop_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Narrative_Boundary_View_Stddev_Samp_Fields = {\n  __typename?: 'narrative_boundary_view_stddev_samp_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_samp() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Stddev_Samp_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate sum on columns */\nexport type Narrative_Boundary_View_Sum_Fields = {\n  __typename?: 'narrative_boundary_view_sum_fields';\n  boundary_id?: Maybe<Scalars['Int']>;\n  narrative_id?: Maybe<Scalars['Int']>;\n};\n\n/** order by sum() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Sum_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Narrative_Boundary_View_Var_Pop_Fields = {\n  __typename?: 'narrative_boundary_view_var_pop_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_pop() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Var_Pop_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Narrative_Boundary_View_Var_Samp_Fields = {\n  __typename?: 'narrative_boundary_view_var_samp_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_samp() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Var_Samp_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Narrative_Boundary_View_Variance_Fields = {\n  __typename?: 'narrative_boundary_view_variance_fields';\n  boundary_id?: Maybe<Scalars['Float']>;\n  narrative_id?: Maybe<Scalars['Float']>;\n};\n\n/** order by variance() on columns of table \"narrative_boundary_view\" */\nexport type Narrative_Boundary_View_Variance_Order_By = {\n  boundary_id?: InputMaybe<Order_By>;\n  narrative_id?: InputMaybe<Order_By>;\n};\n\n/** column ordering options */\nexport enum Order_By {\n  /** in ascending order, nulls last */\n  Asc = 'asc',\n  /** in ascending order, nulls first */\n  AscNullsFirst = 'asc_nulls_first',\n  /** in ascending order, nulls last */\n  AscNullsLast = 'asc_nulls_last',\n  /** in descending order, nulls first */\n  Desc = 'desc',\n  /** in descending order, nulls first */\n  DescNullsFirst = 'desc_nulls_first',\n  /** in descending order, nulls last */\n  DescNullsLast = 'desc_nulls_last'\n}\n\nexport type Query_Root = {\n  __typename?: 'query_root';\n  /** fetch data from the table: \"Boundaries\" */\n  Boundaries: Array<Boundaries>;\n  /** fetch aggregated fields from the table: \"Boundaries\" */\n  Boundaries_aggregate: Boundaries_Aggregate;\n  /** fetch data from the table: \"Boundaries\" using primary key columns */\n  Boundaries_by_pk?: Maybe<Boundaries>;\n  /** fetch data from the table: \"Narratives\" */\n  Narratives: Array<Narratives>;\n  /** fetch aggregated fields from the table: \"Narratives\" */\n  Narratives_aggregate: Narratives_Aggregate;\n  /** fetch data from the table: \"Narratives\" using primary key columns */\n  Narratives_by_pk?: Maybe<Narratives>;\n  /** fetch data from the table: \"Videos\" */\n  Videos: Array<Videos>;\n  /** fetch aggregated fields from the table: \"Videos\" */\n  Videos_aggregate: Videos_Aggregate;\n  /** fetch data from the table: \"Videos\" using primary key columns */\n  Videos_by_pk?: Maybe<Videos>;\n  /** fetch data from the table: \"Visibles\" */\n  Visibles: Array<Visibles>;\n  /** fetch aggregated fields from the table: \"Visibles\" */\n  Visibles_aggregate: Visibles_Aggregate;\n  /** fetch data from the table: \"Visibles\" using primary key columns */\n  Visibles_by_pk?: Maybe<Visibles>;\n  /** fetch data from the table: \"boundary_narrative_view\" */\n  boundary_narrative_view: Array<Boundary_Narrative_View>;\n  /** fetch aggregated fields from the table: \"boundary_narrative_view\" */\n  boundary_narrative_view_aggregate: Boundary_Narrative_View_Aggregate;\n  /** fetch data from the table: \"narrative_boundary_view\" */\n  narrative_boundary_view: Array<Narrative_Boundary_View>;\n  /** fetch aggregated fields from the table: \"narrative_boundary_view\" */\n  narrative_boundary_view_aggregate: Narrative_Boundary_View_Aggregate;\n};\n\n\nexport type Query_RootBoundariesArgs = {\n  distinct_on?: InputMaybe<Array<Boundaries_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundaries_Order_By>>;\n  where?: InputMaybe<Boundaries_Bool_Exp>;\n};\n\n\nexport type Query_RootBoundaries_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Boundaries_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundaries_Order_By>>;\n  where?: InputMaybe<Boundaries_Bool_Exp>;\n};\n\n\nexport type Query_RootBoundaries_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootNarrativesArgs = {\n  distinct_on?: InputMaybe<Array<Narratives_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narratives_Order_By>>;\n  where?: InputMaybe<Narratives_Bool_Exp>;\n};\n\n\nexport type Query_RootNarratives_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Narratives_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narratives_Order_By>>;\n  where?: InputMaybe<Narratives_Bool_Exp>;\n};\n\n\nexport type Query_RootNarratives_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootVideosArgs = {\n  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Videos_Order_By>>;\n  where?: InputMaybe<Videos_Bool_Exp>;\n};\n\n\nexport type Query_RootVideos_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Videos_Order_By>>;\n  where?: InputMaybe<Videos_Bool_Exp>;\n};\n\n\nexport type Query_RootVideos_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootVisiblesArgs = {\n  distinct_on?: InputMaybe<Array<Visibles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Visibles_Order_By>>;\n  where?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n\nexport type Query_RootVisibles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Visibles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Visibles_Order_By>>;\n  where?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n\nexport type Query_RootVisibles_By_PkArgs = {\n  boundary_id: Scalars['Int'];\n  narrative_id: Scalars['Int'];\n};\n\n\nexport type Query_RootBoundary_Narrative_ViewArgs = {\n  distinct_on?: InputMaybe<Array<Boundary_Narrative_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundary_Narrative_View_Order_By>>;\n  where?: InputMaybe<Boundary_Narrative_View_Bool_Exp>;\n};\n\n\nexport type Query_RootBoundary_Narrative_View_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Boundary_Narrative_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundary_Narrative_View_Order_By>>;\n  where?: InputMaybe<Boundary_Narrative_View_Bool_Exp>;\n};\n\n\nexport type Query_RootNarrative_Boundary_ViewArgs = {\n  distinct_on?: InputMaybe<Array<Narrative_Boundary_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narrative_Boundary_View_Order_By>>;\n  where?: InputMaybe<Narrative_Boundary_View_Bool_Exp>;\n};\n\n\nexport type Query_RootNarrative_Boundary_View_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Narrative_Boundary_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narrative_Boundary_View_Order_By>>;\n  where?: InputMaybe<Narrative_Boundary_View_Bool_Exp>;\n};\n\nexport type Subscription_Root = {\n  __typename?: 'subscription_root';\n  /** fetch data from the table: \"Boundaries\" */\n  Boundaries: Array<Boundaries>;\n  /** fetch aggregated fields from the table: \"Boundaries\" */\n  Boundaries_aggregate: Boundaries_Aggregate;\n  /** fetch data from the table: \"Boundaries\" using primary key columns */\n  Boundaries_by_pk?: Maybe<Boundaries>;\n  /** fetch data from the table: \"Narratives\" */\n  Narratives: Array<Narratives>;\n  /** fetch aggregated fields from the table: \"Narratives\" */\n  Narratives_aggregate: Narratives_Aggregate;\n  /** fetch data from the table: \"Narratives\" using primary key columns */\n  Narratives_by_pk?: Maybe<Narratives>;\n  /** fetch data from the table: \"Videos\" */\n  Videos: Array<Videos>;\n  /** fetch aggregated fields from the table: \"Videos\" */\n  Videos_aggregate: Videos_Aggregate;\n  /** fetch data from the table: \"Videos\" using primary key columns */\n  Videos_by_pk?: Maybe<Videos>;\n  /** fetch data from the table: \"Visibles\" */\n  Visibles: Array<Visibles>;\n  /** fetch aggregated fields from the table: \"Visibles\" */\n  Visibles_aggregate: Visibles_Aggregate;\n  /** fetch data from the table: \"Visibles\" using primary key columns */\n  Visibles_by_pk?: Maybe<Visibles>;\n  /** fetch data from the table: \"boundary_narrative_view\" */\n  boundary_narrative_view: Array<Boundary_Narrative_View>;\n  /** fetch aggregated fields from the table: \"boundary_narrative_view\" */\n  boundary_narrative_view_aggregate: Boundary_Narrative_View_Aggregate;\n  /** fetch data from the table: \"narrative_boundary_view\" */\n  narrative_boundary_view: Array<Narrative_Boundary_View>;\n  /** fetch aggregated fields from the table: \"narrative_boundary_view\" */\n  narrative_boundary_view_aggregate: Narrative_Boundary_View_Aggregate;\n};\n\n\nexport type Subscription_RootBoundariesArgs = {\n  distinct_on?: InputMaybe<Array<Boundaries_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundaries_Order_By>>;\n  where?: InputMaybe<Boundaries_Bool_Exp>;\n};\n\n\nexport type Subscription_RootBoundaries_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Boundaries_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundaries_Order_By>>;\n  where?: InputMaybe<Boundaries_Bool_Exp>;\n};\n\n\nexport type Subscription_RootBoundaries_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootNarrativesArgs = {\n  distinct_on?: InputMaybe<Array<Narratives_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narratives_Order_By>>;\n  where?: InputMaybe<Narratives_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNarratives_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Narratives_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narratives_Order_By>>;\n  where?: InputMaybe<Narratives_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNarratives_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootVideosArgs = {\n  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Videos_Order_By>>;\n  where?: InputMaybe<Videos_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVideos_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Videos_Order_By>>;\n  where?: InputMaybe<Videos_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVideos_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootVisiblesArgs = {\n  distinct_on?: InputMaybe<Array<Visibles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Visibles_Order_By>>;\n  where?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVisibles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Visibles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Visibles_Order_By>>;\n  where?: InputMaybe<Visibles_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVisibles_By_PkArgs = {\n  boundary_id: Scalars['Int'];\n  narrative_id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootBoundary_Narrative_ViewArgs = {\n  distinct_on?: InputMaybe<Array<Boundary_Narrative_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundary_Narrative_View_Order_By>>;\n  where?: InputMaybe<Boundary_Narrative_View_Bool_Exp>;\n};\n\n\nexport type Subscription_RootBoundary_Narrative_View_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Boundary_Narrative_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Boundary_Narrative_View_Order_By>>;\n  where?: InputMaybe<Boundary_Narrative_View_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNarrative_Boundary_ViewArgs = {\n  distinct_on?: InputMaybe<Array<Narrative_Boundary_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narrative_Boundary_View_Order_By>>;\n  where?: InputMaybe<Narrative_Boundary_View_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNarrative_Boundary_View_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Narrative_Boundary_View_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Narrative_Boundary_View_Order_By>>;\n  where?: InputMaybe<Narrative_Boundary_View_Bool_Exp>;\n};\n\nexport type CommunityVideosQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CommunityVideosQuery = { __typename?: 'query_root', Videos: Array<{ __typename?: 'Videos', id: number, src: string, transcript?: string | null, name: string }> };\n\nexport type MapPageQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MapPageQuery = { __typename?: 'query_root', Narratives: Array<{ __typename?: 'Narratives', id: number, name: any, color: any, boundaries: Array<{ __typename?: 'narrative_boundary_view', id?: number | null }> }>, Boundaries: Array<{ __typename?: 'Boundaries', id: number, name: string, color?: any | null, data: string }> };\n\n\nexport const CommunityVideosDocument = gql`\n    query communityVideos {\n  Videos(order_by: {id: desc}) {\n    id\n    name: author\n    src\n    transcript\n  }\n}\n    `;\n\n/**\n * __useCommunityVideosQuery__\n *\n * To run a query within a React component, call `useCommunityVideosQuery` and pass it any options that fit your needs.\n * When your component renders, `useCommunityVideosQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCommunityVideosQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCommunityVideosQuery(baseOptions?: Apollo.QueryHookOptions<CommunityVideosQuery, CommunityVideosQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<CommunityVideosQuery, CommunityVideosQueryVariables>(CommunityVideosDocument, options);\n      }\nexport function useCommunityVideosLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<CommunityVideosQuery, CommunityVideosQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<CommunityVideosQuery, CommunityVideosQueryVariables>(CommunityVideosDocument, options);\n        }\nexport type CommunityVideosQueryHookResult = ReturnType<typeof useCommunityVideosQuery>;\nexport type CommunityVideosLazyQueryHookResult = ReturnType<typeof useCommunityVideosLazyQuery>;\nexport type CommunityVideosQueryResult = Apollo.QueryResult<CommunityVideosQuery, CommunityVideosQueryVariables>;\nexport const MapPageDocument = gql`\n    query mapPage {\n  Narratives(order_by: {id: asc}) {\n    id\n    name\n    color\n    boundaries(order_by: {boundary_id: asc}) {\n      id: boundary_id\n    }\n  }\n  Boundaries {\n    id\n    name\n    data: file\n    color\n  }\n}\n    `;\n\n/**\n * __useMapPageQuery__\n *\n * To run a query within a React component, call `useMapPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useMapPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMapPageQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMapPageQuery(baseOptions?: Apollo.QueryHookOptions<MapPageQuery, MapPageQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<MapPageQuery, MapPageQueryVariables>(MapPageDocument, options);\n      }\nexport function useMapPageLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MapPageQuery, MapPageQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<MapPageQuery, MapPageQueryVariables>(MapPageDocument, options);\n        }\nexport type MapPageQueryHookResult = ReturnType<typeof useMapPageQuery>;\nexport type MapPageLazyQueryHookResult = ReturnType<typeof useMapPageLazyQuery>;\nexport type MapPageQueryResult = Apollo.QueryResult<MapPageQuery, MapPageQueryVariables>;","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { EXPLORE_PAGE_BOUNDARY_DATA, ExplorePageToggleStates } from '@/data/ExplorePageData';\nimport { ExplorePageNarratives } from '@/organisms/Narrative';\nimport { Theme } from '@/theme/Theme';\nimport { Map } from '@/atoms/MapAtoms';\nimport { MapLayers } from '@/molecules/MapLayers';\nimport { Layout, StyledHeader, StyledFooter } from '@/templates/StandardLayout'\nimport { useMapPageQuery } from '@/graphql/generated';\n\nconst MapContainer = styled.div`\n  display: flex;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n`\n\nconst ExplorePageContainer = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n`;\n\nconst urls = EXPLORE_PAGE_BOUNDARY_DATA.map(boundary => boundary.file);\nconst boundaryIds = EXPLORE_PAGE_BOUNDARY_DATA.map(boundary => boundary.id);\nconst boundaryDataFileLocations = urls.map(url => fetch(url).then(res => res.json()));\n\nexport default function MapPage() {\n  const { data: mapData } = useMapPageQuery();\n  const [data, setData] = React.useState<Array<MapGeoJsonData>>([]);\n  const [narrativeData, setNarrativeData] = React.useState<Array<MapGeoJsonData>>([]);\n  const [featureToggle, setFeatureToggle]= React.useState<FeatureToggleState>({});\n  const [narrative, setNarrative] = React.useState('');\n\n  const { Narratives: gqlNarrative, Boundaries: gqlBoundaries } = mapData || {};\n\n  console.log({ gqlNarrative, gqlBoundaries });\n\n  const onToggleChange = (id: string) => {\n    setFeatureToggle({ ...featureToggle, [id]: !featureToggle[id] });\n  };\n\n  React.useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const rawData = await Promise.all(boundaryDataFileLocations);\n        const ExplorePageData = boundaryIds.map((id: string, idx) => {\n          return {\n            data: rawData[idx],\n            name: rawData[idx]['name'] ?? 'Name missing from data',\n            id: id,\n            type: 'line',\n            color: EXPLORE_PAGE_BOUNDARY_DATA[idx].color,\n            visible: EXPLORE_PAGE_BOUNDARY_DATA[idx].visible,\n          }\n        });\n\n        setData(ExplorePageData)\n      } catch (error) {\n        console.log('Explore page data fetch failed: ' + error);\n      }\n    }\n\n    fetchAll();\n  }, []); // loads raw data in only once on the first completed component lifecycle\n\n  // Whenever narrative changes, the data to show also changes which is marked by the visible values in NARRATIVES\n  // This adjusted data is also fed into the featureToggleState function\n  React.useEffect(() => {\n    if (gqlNarrative !== undefined && gqlBoundaries !== undefined) {\n      const filteredNarratives = gqlNarrative.filter(({ name }) => name === narrative);\n      if (filteredNarratives.length === 0) {\n        return;\n      }\n      const selectedNarrative = filteredNarratives[0];\n      const dataWithNarrative: MapGeoJsonData[] = JSON.parse(JSON.stringify(data));\n\n      selectedNarrative.boundaries.forEach(({ id }) => {\n        if (id === undefined || id === null) {\n          return;\n        }\n        const boundaryIndex = gqlBoundaries.findIndex(({ id: bid }) => bid === id);\n        const boundaryName = gqlBoundaries[boundaryIndex].name;\n        const idx = dataWithNarrative.findIndex(landmark => landmark.id === boundaryName);\n        dataWithNarrative[idx].visible = true;\n      });\n\n      setNarrativeData(dataWithNarrative);\n      setFeatureToggle(ExplorePageToggleStates(dataWithNarrative));\n    } else {\n      setNarrativeData(data);\n      setFeatureToggle({});\n    }\n  }, [narrative, data, gqlNarrative, gqlBoundaries]);\n\n  return (\n    <Layout>\n      <StyledHeader />\n      <ExplorePageContainer>\n        <ExplorePageNarratives\n          narrative={ narrative }\n          data={ narrativeData }\n          toggleState={ featureToggle }\n          toggleHandler={ onToggleChange }\n          setNarrative={ setNarrative }\n        />\n        <MapContainer>\n          <Map mapStyle={ Theme.map.dark }>\n            <MapLayers\n              geoJsonData={ narrativeData }\n              toggleState={ featureToggle }\n            />\n          </Map>\n        </MapContainer>\n      </ExplorePageContainer>\n      <StyledFooter />\n    </Layout>\n  )\n}\n","import StandardLayout from \"@/templates/StandardLayout\"\n\nexport default function ActPage() {\n  return (\n    <StandardLayout>\n      <h1>Get Involved</h1>\n    </StandardLayout>\n  )\n}\n","import styled from \"@emotion/styled\";\n\nexport interface CommunityVideo {\n    // The location of the video\n    src: string;\n    // Determines whether the video should loop\n    loop: boolean;\n    // The name of the speak in the video\n    speakerName: string;\n    // The textual content the speaker is sharing in the video\n    transcript: string;\n    // Determines whether videos should play automatically when the video renders\n    autoplay: boolean;\n    // Determines whether the video should be muted\n    muted: boolean;\n    // The unique identifier assigned to the video\n    id: number;\n    // The call back fired when a video is clicked\n    onVideoClickHander: (id: number) => void;\n}\n\n// styled container\nconst CommunityVideoContainer = styled.div`\n    width: 100%;\n\n    @media (min-width: ${props => props.theme.mediaQuery.tablet}) {\n        flex-grow: 1;\n        width: 25%;\n        padding: 20px;\n        position: relative;\n    }`\n\n// styled video player\nconst CommunityVideoPlayer = styled.video`\n    width: 100%;\n`\n\n// The callback handler fired when a video is clicked\nexport const CommunityVideoComponent = (props: CommunityVideo) => {\n    /**\n     * Manages calling the parent callback when a video is clicked\n     */\n    function onClickPlayVideo() {\n        props.onVideoClickHander(props.id);\n    }\n\n    /**\n     * Manage resetting the current time of the video when its selected\n     * @param video - the video element the user selected\n     */\n    function handleVideoPlayback(video: HTMLVideoElement){\n        if(video != null){\n            video.currentTime = 0;\n        }\n    }\n\n    // the video fragement if there is a src avaliable\n    const videoFragment = <>\n    <CommunityVideoPlayer onClick={onClickPlayVideo}\n        autoPlay={props.autoplay}\n        loop={props.loop}\n        muted={props.muted}\n        ref={handleVideoPlayback}>\n            <source src={props.src} type=\"video/mp4\"></source>\n        </CommunityVideoPlayer>\n        <div className=\"video-meta\">\n            <div className=\"speaker-name\">{props.speakerName}</div>\n            <div className=\"transcript\">{props.transcript}</div>\n        </div>\n    </>;\n    \n    // error state if the src is missing\n    const errorState = <div> error </div>; \n    \n    return (\n        <CommunityVideoContainer>\n            {props.src ? videoFragment : errorState}\n        </CommunityVideoContainer>\n    );\n}","import StandardLayout from \"@/templates/StandardLayout\"\nimport styled from \"@emotion/styled\";\nimport { CommunityVideoComponent } from \"@/organisms/CommunityVideo\" \nimport { useState } from \"react\"\nimport { useCommunityVideosQuery } from \"@/graphql/generated\"\n\n\n// styled video container\nconst CommunityVideoContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  width: 100%;\n`\n\n/**\n * \n * @returns Renders the meet the community page\n */\nexport default function MeetPage() {\n  const { data, loading, error } = useCommunityVideosQuery();\n  const [selectedVideo, onSelectedVideo] = useState(-1);\n  \n  function onVideoClickPauseVideos(id: number) {\n    onSelectedVideo(id);\n  }\n\n  return (\n    <StandardLayout>\n      <CommunityVideoContainer>\n      {\n        loading ? <span>Loading</span> :\n        error ? <span>Error</span> :\n        data === undefined ? <span>There's no video...</span> :\n        data.Videos.map(({ id: index, name, src, transcript }) => {\n          return <CommunityVideoComponent\n            key={index}\n            id={index}\n            loop={selectedVideo === -1 || selectedVideo === index} \n            src={src}\n            speakerName={name}\n            transcript={transcript || \"No description.\"}\n            autoplay={selectedVideo === -1 || selectedVideo === index}\n            muted={selectedVideo !== index}\n            onVideoClickHander={onVideoClickPauseVideos}\n          ></CommunityVideoComponent>\n        })\n      }\n      </CommunityVideoContainer>\n    </StandardLayout>\n  )\n}\n","import styled from '@emotion/styled';\nimport { Theme } from '@/theme/Theme';\n\nconst LandingGridContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n  column-gap: ${ props => props.theme.spacing.m };\n  row-gap: ${ props => props.theme.spacing.m };\n  background: radial-gradient(silver, transparent 60%);\n\n  @media (min-width: ${props => props.theme.mediaQuery.tablet}) {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    column-gap: ${ props => props.theme.spacing.l };\n    row-gap: ${ props => props.theme.spacing.l };\n  }\n`\n\nconst CardContainer = styled.div<{ color: string }>`\n  width: 100%;\n  height: 500px;\n  position: relative;\n  overflow: hidden;\n\n  &:hover {\n    .card-image {\n      transform: scale(1);\n    }\n    .card-info {\n      transform: translateY(-100%);\n    }\n  }\n`;\n\nconst CardImage = styled.div<{ src: string }>`\n  height: 100%;\n  width: 100%;\n  transform: scale(0.8);\n  transition: transform 0.2s ease-in;\n  background-image: url(${props => props.src});\n  background-size: cover;\n  background-repeat: no-repeat;\n  box-shadow: 0 0 24px 0 black;\n`;\n\nconst CardTitle = styled.span`\n  position: absolute;\n  color: white;\n  transform: translateY(-50%);\n  top: 50%;\n  left: 8px;\n  font-size: 48px;\n  font-family: ${ props => props.theme.fonts.fontFamily.header };\n  z-index: 4;\n  text-shadow: 0 0 2px black;\n\n  @media (min-width: ${props => props.theme.mediaQuery.tablet}) {\n    font-size: 48px;\n  }\n`;\n\n// const CardInfo = styled.div`\n//   height: 50%;\n//   width: 100%;\n//   transform: translateY(150%);\n//   position: absolute;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   background: #F2F2F2;\n//   transition: transform ease-out 0.6s;\n// `;\n\n// const InfoText = styled.div`\n//   color: black;\n//   font-family: ${ props => props.theme.fonts.primary };\n//   font-size: ${ props => props.theme.fonts.fontSize.regular };\n// `;\n\nconst LandingCard = ( { children, color, src, title } : { children: string; color: string; src: string; title: string }) => {\n  return (\n    <CardContainer color={ color }>\n      <CardTitle>{ title }</CardTitle> \n      <CardImage className='card-image' src={ src } />\n      {/* <CardInfo className='card-info'><InfoText>{ children }</InfoText></CardInfo> */}\n    </CardContainer>\n  )\n}\n\nexport const LandingGrid = () => {\n  return (\n    <LandingGridContainer>\n      <LandingCard title='About' color={ Theme.colors.blue } src='https://upload.wikimedia.org/wikipedia/commons/3/3b/Mattapan_M_Line_Trolley_3254.jpg'>More info on About</LandingCard>\n      <LandingCard title='Explore' color={ Theme.colors.peach } src='https://cdn10.bostonmagazine.com/wp-content/uploads/sites/2/2018/12/mattapan1.jpg'>More info on Explore</LandingCard>\n      <LandingCard title='Meet' color={ Theme.colors.teal } src='https://assets.simpleviewinc.com/simpleview/image/upload/c_fill,f_jpg,g_xy_center,h_748,q_65,w_640,x_836,y_394/v1/clients/boston/Mattapan_KyleKlein_KKP11885_6575163c-84da-4e45-a1a0-e7b1f4724191.jpg'>Meet</LandingCard>\n      <LandingCard title='Share' color={ Theme.colors.orange } src='https://i.pinimg.com/originals/b7/20/98/b720983ab02bbdf91e643427d17470cb.jpg'>More info on Share</LandingCard>\n      <LandingCard title='Get Involved' color={ Theme.colors.red } src='https://images1.apartments.com/i2/C-nvX3YH0OZYtCUKBXUSgYr9XOvRY4U8cKwa-F2isvg/111/78-mattapan-st-unit-1-boston-ma-exterior.jpg'>More info on Get Involved</LandingCard>\n      <LandingCard title='Contact Us?' color={ Theme.colors.brown } src='https://scontent-bos3-1.xx.fbcdn.net/v/t1.6435-9/p960x960/120760232_3847173248643441_4683888836416691032_n.jpg?_nc_cat=104&ccb=1-5&_nc_sid=36a2c1&_nc_ohc=CFsgtqppGvcAX_ZnzNE&_nc_ht=scontent-bos3-1.xx&oh=dc1f7a638e4cc2fcf5150610c79d1c42&oe=618D5C99'>More info on Contact Us?</LandingCard>\n    </LandingGridContainer>\n  )\n}\n","import styled from '@emotion/styled';\n\nconst VideoContainer = styled.video`\n    width: 100%;\n    box-shadow: 0 0 24px 0 black;\n    border-radius: 4px;\n`;\n\nexport const SplashVideo = () => (\n    <VideoContainer\n        autoPlay\n        muted\n        loop\n        preload='auto'\n        playsInline\n        src='https://assets.mixkit.co/videos/preview/mixkit-daytime-city-traffic-aerial-view-56-large.mp4'\n    />\n);","import StandardLayout from '@/templates/StandardLayout';\nimport { LandingGrid } from '@/organisms/LandingGrid';\nimport { SplashVideo } from '@/organisms/SplashVideo'\n\nexport default function LandingPage() {\n  return (\n    <StandardLayout>\n      <SplashVideo />\n      <LandingGrid />\n    </StandardLayout>\n  )\n}\n","import StandardLayout from \"@/templates/StandardLayout\"\n\nexport default function SharePage() {\n  return (\n    <StandardLayout>\n      <h1>Share</h1>\n    </StandardLayout>\n  )\n}\n","import \"@fontsource/baron-neue\";\nimport \"@fontsource/lato\";\n\nconst GlobalStyle: React.FC = function GlobalStyleComponent() {\n  return null;\n};\n\nexport default GlobalStyle;","import React from 'react';\nimport styled from '@emotion/styled';\n\nexport function Chapter({ id, content, title, image, isActive, hidden, alignment }: ChapterProps) {\n  return (\n    <div id={id} className={`step ${isActive ? 'active' : ''} ${alignment} ${hidden ? 'hidden' : ''}`}>\n      {/* FIXME: replace with theme? */}\n      <div className=\"light\">\n        <h3>{title}</h3>\n        <img src={image} alt=''/>\n        <p>\n          {content}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst StyledHeader = styled.header`\n  margin: auto;\n  width: 100%;\n  position: relative;\n  z-index: 5;\n`\nconst StyledFooter = styled.footer`\n  width: 100%;\n  min-height: 5vh;\n  padding-top: 2vh;\n  padding-bottom: 2vh;\n  text-align: center;\n  line-height: 25px;\n  font-size: 13px;\n  position: relative;\n  z-index: 5;\n`\nexport function Header({title, subtitle, byline}: HeaderProps ) {\n\n  // FIXME: Add the theme\n  // if (header.innerText.length > 0) {\n  //   header.classList.add(config.theme);\n  // story.appendChild(header);\n  // }\n  \n  return (\n    <StyledHeader id='header' className='dark'>\n      <h1>{title}</h1>\n      <h2>{subtitle}</h2>\n      <p>{byline}</p>\n    </StyledHeader>\n  );\n};\n\nexport function Footer({footerHtml}: {footerHtml: string}) {\n  \n  // TODO: dynamically add theme\n  //    if (footer.innerText.length > 0) {\n  //       footer.classList.add(config.theme);\n  //       footer.setAttribute('id', 'footer');\n  //       story.appendChild(footer);\n  // }\n  \n  return (\n    <StyledFooter id='footer' className='dark'>\n      {/* FIXME: Do this a better way? */}\n      <p dangerouslySetInnerHTML={{ __html: footerHtml }}>\n      </p>\n    </StyledFooter>\n  );\n};\n","import React from 'react';\nimport { Scrollama, Step } from 'react-scrollama';\nimport { MapContext } from 'react-map-gl';\nimport { Chapter, Header, Footer } from '@/atoms/MapStoryAtoms';\n\n\nconst layerTypes = {\n  'fill': ['fill-opacity'],\n  'line': ['line-opacity'],\n  'circle': ['circle-opacity', 'circle-stroke-opacity'],\n  'symbol': ['icon-opacity', 'text-opacity'],\n  'raster': ['raster-opacity'],\n  'fill-extrusion': ['fill-extrusion-opacity'],\n  'heatmap': ['heatmap-opacity']\n};\n\nconst alignments = {\n  'left': 'lefty',\n  'center': 'centered',\n  'right': 'righty',\n  'full': 'fully'\n};\n\nexport function Story({ onMarkerCoordsChange, chapterData, headerTitle, headerSubtitle, headerByline, footerHtml, showMarkers, toggleLayer }: StoryProps) {\n  const [activeStep, setActiveStep] = React.useState('');\n\n  const { map } = React.useContext(MapContext);\n  const [mapRef, setMapRef]: [any, React.Dispatch<React.SetStateAction<any>>] = React.useState(map.current);\n  \n  React.useEffect(() => {\n    setMapRef(map?.current?.getMap());\n  }, [map])\n\n  function getLayerPaintType(layer: string) {\n    if (mapRef) {\n      const layerType: Layer = mapRef.getLayer(layer)?.type;\n      \n      return layerTypes[layerType];\n    }\n  }\n\n  function setLayerOpacity({ layer, duration, opacity }: { layer: string, duration: number, opacity: number }) {\n    if (mapRef) {\n      const paintProps = getLayerPaintType(layer);\n      paintProps?.forEach(function(prop) {\n        let options = {};\n        if (duration) {\n          const transitionProp = `${prop}-transition`;\n          options = { 'duration': duration };\n          mapRef.setPaintProperty(layer, transitionProp, options);\n        }\n        mapRef.setPaintProperty(layer, prop, opacity, options);\n      });\n    }\n  }\n\n  const onStepEnter = ({ data }: { data: string }) => {\n    setActiveStep(data);\n    const chapter = chapterData.find((chap: Chapter) => chap.id === data);\n    \n    if (mapRef) {\n      mapRef[chapter.mapAnimation || 'flyTo'](chapter.location);\n    }\n      \n    if (showMarkers) {\n      onMarkerCoordsChange(chapter.location.center);\n    }\n\n    if (chapter.onChapterEnter.length > 0) {\n      chapter.onChapterEnter.forEach((transition: ChapterTransition) => {\n        toggleLayer(transition.layer);\n        setLayerOpacity(transition)\n      });\n    }\n  \n    if (chapter.callback) {\n      // window[chapter.callback]();\n    }\n  \n    if (chapter.rotateAnimation && mapRef) {\n      mapRef.once('moveend', () => {\n        const rotateNumber = mapRef.getBearing();\n        mapRef.rotateTo(rotateNumber + 180, {\n          duration: 30000, easing: function (t: number) {\n            return t;\n          }\n        });\n      });\n    }\n  }\n\n  const onStepExit = ({ data }: { data: string }) => {\n    const chapter = chapterData.find((chap: Chapter) => chap.id === data);\n    if (chapter.onChapterExit.length > 0) {\n      chapter.onChapterExit.forEach((transition: ChapterTransition) => {\n        toggleLayer(transition.layer);\n        setLayerOpacity(transition)\n      });\n    }\n  };\n\n\n  const chapters = chapterData.map((record: Chapter, idx: number) => (\n    <Step data={record.id} key={record.id}>\n      {/* Need to wrap React components in div to use as children */}\n      <div> \n        <Chapter\n          id={record.id}\n          key={record.id}\n          title={record.title}\n          content={record.description}\n          image={record.image}\n          alignment={alignments[record.alignment] || 'centered'}\n          hidden={record.hidden}\n          isActive={record.id === activeStep}\n          />\n      </div>\n    </Step>\n  ));\n\n  return (\n    <div id=\"story\">\n      <Header title={headerTitle} subtitle={headerSubtitle} byline={headerByline} />\n      <div id='features' style={{ paddingTop: '10vh', paddingBottom: '10vh' }}>\n      <Scrollama\n        onStepEnter={onStepEnter}\n        onStepExit={onStepExit}\n        offset={0.5}\n        >\n        {chapters}\n      </Scrollama>\n      </div>  \n      <Footer footerHtml={footerHtml} />\n    </div>\n  )\n}","import React from 'react';\nimport ReactMapGL, { Marker, MapContext, MapRef } from 'react-map-gl';\n\nimport { ExplorePageToggleStates, EXPLORE_PAGE_BOUNDARY_DATA } from '@/data/ExplorePageData';\nimport { Pin } from '@/atoms/MapAtoms';\nimport { Story } from '@/molecules/MapStory';\nimport { MapLayers } from '@/molecules/MapLayers';\n// import { Theme } from '@/theme/Theme';\n\nimport './mapStoryStyles.css';\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_ENV;\nconst GRAPHQL_URI = process.env.REACT_APP_GRAPHQL_URI;\n\nconst urls = EXPLORE_PAGE_BOUNDARY_DATA.map(boundary => boundary.file);\nconst boundaryIds = EXPLORE_PAGE_BOUNDARY_DATA.map(boundary => boundary.id);\nconst boundaryDataFileLocations = urls.map(url => fetch(url).then(res => res.json()));\n\nconst chaptersListQuery = `\n    query ChaptersList {\n        chapters: storytelling_chapter(order_by: {id: asc}) {\n            id: name\n            alignment\n            hidden\n            title\n            image\n            description\n            location {\n                center\n                zoom\n                pitch\n                bearing\n                curve\n                max_duration\n                min_zoom\n                screen_speed\n                speed\n            }\n            mapAnimation\n            rotateAnimation\n            callback\n            onChapterEnter {\n                layer\n                opacity\n                duration\n            }\n            onChapterExit {\n                layer\n                opacity\n                duration\n            }\n        }\n    }`;\n\nconst options = {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ query: chaptersListQuery }),\n};\n\nconst DEFAULT_CONFIG = {\n  style: 'mapbox://styles/mattapan-mapping/cl1mtp3gy000k14mblgpwmoh8',\n  accessToken: MAPBOX_TOKEN,\n  showMarkers: true,\n  markerColor: '#3FB1CE',\n  // projection: 'equirectangular',\n  //Read more about available projections here\n  //https://docs.mapbox.com/mapbox-gl-js/example/projections/\n  inset: true,\n  theme: 'dark',\n  use3dTerrain: false, //set true for enabling 3D maps.\n  title: 'The Title Text of this Story',\n  subtitle: 'A descriptive and interesting subtitle to draw in the reader',\n  byline: 'By a Digital Storyteller',\n  footer: 'Source: source citations, etc. <br> Created using <a href=\"https://github.com/mapbox/storytelling\" target=\"_blank\">Mapbox Storytelling</a> template.',\n  chapters: [\n    {\n      id: 'slug-style-id',\n      alignment: 'left',\n      hidden: false,\n      title: 'Base Title',\n      image: './path/to/image/source.png',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      location: {\n        center: [-71.0869, 42.27],\n        zoom: 12,\n        pitch: 60,\n        bearing: 0\n      },\n      mapAnimation: 'flyTo',\n      rotateAnimation: false,\n      callback: '',\n      onChapterEnter: [\n        {\n          layer: 'river-st-corridor',\n          opacity: 1,\n          duration: 5000\n        },\n        {\n          layer: 'transportLayer',\n          opacity: 1,\n          duration: 5000\n        },\n        {\n          layer: 'cummimnsHwyCorridor',\n          opacity: 1,\n          duration: 5000\n        },\n      ],\n      onChapterExit: [\n        {\n          layer: 'river-st-corridor',\n          opacity: 0\n        },\n        {\n          layer: 'transportLayer',\n          opacity: 0,\n          duration: 5000\n        },\n          {\n          layer: 'cummimnsHwyCorridor',\n          opacity: 0,\n          duration: 5000\n        }       \n      ]\n    },\n    {\n      id: 'second-identifier',\n      alignment: 'right',\n      hidden: false,\n      title: 'Second Title',\n      image: './path/to/image/source.png',\n      description: 'Copy these sections to add to your story.',\n      location: {\n        center: [-71.0869, 42.27],\n        zoom: 12,\n        pitch: 60,\n        bearing: 0\n        // flyTo additional controls-\n        // These options control the flight curve, making it move\n        // slowly and zoom out almost completely before starting\n        // to pan.\n        //speed: 2, // make the flying slow\n        //curve: 1, // change the speed at which it zooms out\n      },\n      mapAnimation: 'flyTo',\n      rotateAnimation: true,\n      callback: '',\n      onChapterEnter: [\n        {\n          layer: 'zoning-subdistricts',\n          opacity: 1,\n          duration: 1000\n        },\n        {\n          layer: 'mattapanPlanBoundary',\n          opacity: 1,\n          duration: 1000\n        }\n      ],\n      onChapterExit: [\n        {\n          layer: 'zoning-subdistricts',\n          opacity: 0\n        },\n        {\n          layer: 'mattapanPlanBoundary',\n          opacity: 0,\n          duration: 1000\n        }\n      ]\n    }\n       \n  ]\n};\n\nconst transformRequest = (url?: string) => {\n  const hasQuery = url?.indexOf('?') !== -1;\n  const suffix = hasQuery ? '&pluginName=scrollytellingV2' : '?pluginName=scrollytellingV2';\n  return {\n    url: url + suffix\n  };\n};\n\nconst StorytellingMap = (props: any) => {\n  const [chapterData, setChapterData]: [Chapter[], React.Dispatch<React.SetStateAction<any>>] = React.useState([]);\n  const [markerCoords, setMarkerCoords]: [number[], React.Dispatch<React.SetStateAction<any>>] = React.useState(DEFAULT_CONFIG.chapters[0].location.center);\n  const [data, setData]: [MapGeoJsonData[], React.Dispatch<React.SetStateAction<any>>] = React.useState([]);\n\n  // Use a ref in combination with state to so that toggleLayer can always reference the current state\n  // With just state, toggleLayer would only use the initial state when updating so intermediate state updates\n  // would just be overwritten. If all layers were initially active then all layers appear in the initial chapter and aren't\n  // toggled off unless they are referenced later. This occurs since the data fetch completes after the scrollama component is \n  // initialized in <Story>'s initial render. \n  // With just a ref, a change in active layers wouldn't update the <MapLayers> component (need the state change to render).\n  const [activeLayers, _setActiveLayers]: [FeatureToggleState, React.Dispatch<React.SetStateAction<any>>] = React.useState({});\n  const activeLayersRef = React.useRef<FeatureToggleState>({});\n  \n  const setActiveLayers = (layers: FeatureToggleState) => {\n    activeLayersRef.current = layers;\n    _setActiveLayers(layers);\n  }\n\n  const [viewport] = React.useState({\n    longitude: DEFAULT_CONFIG.chapters[0].location.center[0] ?? -71.088,\n    latitude: DEFAULT_CONFIG.chapters[0].location.center[1] ?? 42.286,\n    zoom: DEFAULT_CONFIG.chapters[0].location.zoom ?? 12.1,\n    bearing: DEFAULT_CONFIG.chapters[0].location.bearing ?? 0,\n    pitch: DEFAULT_CONFIG.chapters[0].location.pitch ?? 0,\n    width: '100%',\n    height: '100%'\n  });\n\n\n  const mapRef = React.createRef<MapRef>();\n\n  const onMarkerCoordsChange = (coords: [number, number]) => {\n    if (coords[0] !== markerCoords[0] || coords[1] !== markerCoords[1]) {\n      setMarkerCoords(coords);\n    }\n  };\n\n  const toggleLayer = (id: string) => {\n    setActiveLayers({ ...activeLayersRef.current, [id]: !activeLayersRef.current[id] });\n  };\n\n  React.useEffect(() => {\n    /* Fetch data from GraphQL on intial render or fall back to default config*/\n    const fetchChapters = async () => {\n      try {\n        const { data } = await fetch(GRAPHQL_URI, options).then(res => res.json());\n        setChapterData(data.chapters)\n      } catch (error) {\n        setChapterData(DEFAULT_CONFIG.chapters)\n        console.error('Story map page failed to fetch config data from graphql', error);\n      }\n    }\n    \n    // Fetch layer data\n    const fetchAll = async () => {\n      try {\n        const rawData = await Promise.all(boundaryDataFileLocations);\n        const ExplorePageData = boundaryIds.map((id: string, idx) => {\n          return {\n            data: rawData[idx],\n            name: rawData[idx]['name'] ?? 'Name missing from data',\n            id: id,\n            type: 'line',\n            color: EXPLORE_PAGE_BOUNDARY_DATA[idx].color,\n            visible: EXPLORE_PAGE_BOUNDARY_DATA[idx].visible,\n          };\n        });\n\n        setData(ExplorePageData)\n        setActiveLayers({ ...ExplorePageToggleStates(ExplorePageData), ...activeLayersRef.current });\n      } catch (error) {\n          console.log('Map Story data fetch failed: ' + error);\n      }\n    }\n\n    fetchAll();\n    fetchChapters();\n  }, [])\n  \n  return (\n    <MapContext.Provider value={{\n      map: mapRef,\n      container: null,\n      isDragging: false,\n      eventManager: undefined,\n    }}>\n      <ReactMapGL\n        style={{\n          top:0,\n            height: '100vh',\n            width:'100vw',\n            position: 'fixed',\n        }}\n        mapStyle={DEFAULT_CONFIG.style}\n        {...viewport}\n        // interactive={false} react-map-gl v7 only\n        // projection={config.projection} react-map-gl v7 only\n        // Uncomment to enable user interction\n        // onViewportChange={ (viewport: any) => {setViewport(viewport)} }\n        transformRequest={transformRequest}\n        mapboxApiAccessToken={DEFAULT_CONFIG.accessToken || MAPBOX_TOKEN}\n        ref={mapRef}\n      >\n        {/* FIXME: Marker doesn't adjust on screen resize */}\n        <Marker longitude={markerCoords[0]} latitude={markerCoords[1]} offsetLeft={-32} offsetTop={-32}>\n          <Pin size={32} color={DEFAULT_CONFIG.markerColor} />\n        </Marker>\n        <MapLayers geoJsonData={ data } toggleState={ activeLayers } /> \n      </ReactMapGL>\n      <Story\n        onMarkerCoordsChange={onMarkerCoordsChange}\n        chapterData={chapterData}\n        headerTitle={DEFAULT_CONFIG.title}\n        headerSubtitle={DEFAULT_CONFIG.subtitle}\n        headerByline={DEFAULT_CONFIG.byline}\n        footerHtml={DEFAULT_CONFIG.footer}\n        showMarkers={DEFAULT_CONFIG.showMarkers}\n        toggleLayer={toggleLayer}\n      />\n    </MapContext.Provider> \n  );\n\n};\n    \nexport default StorytellingMap;\n","import { ThemeProvider } from '@emotion/react'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport { ApolloProvider } from '@apollo/client'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport client from './graphql/apolloClient'\nimport { Theme } from './theme/Theme'\nimport AboutPage from './pages/AboutPage'\nimport ContactPage from './pages/ContactPage'\nimport MapPage from './pages/MapPage'\nimport ActPage from './pages/ActPage'\nimport MeetPage from './pages/MeetPage'\nimport LandingPage from './pages/LandingPage'\nimport SharePage from './pages/SharePage'\nimport GlobalStyle from './GlobalStyle'\nimport StorytellingMap from './pages/MapStoryPage'\n\nconst NotFound = () => <h1>Path Not Recognized</h1>\n\nconst MattapanMappingRoutes = () => (\n  <Routes>\n    <Route path='/' element={<LandingPage />} />\n    <Route path='/about' element={<AboutPage />} />\n    <Route path='/explore' element={<MapPage />} />\n    <Route path='/story' element={<StorytellingMap />} />\n    <Route path='/meet' element={<MeetPage />} />\n    <Route path='/share' element={<SharePage />} />\n    <Route path='/act' element={<ActPage />} />\n    <Route path='/contact' element={<ContactPage />} />\n    <Route path='*' element={<NotFound />} />\n  </Routes>\n)\n\nexport default function App() {\n  return (\n    <ApolloProvider client={client}>\n      <GlobalStyle />\n      <ThemeProvider theme={Theme}>\n        <BrowserRouter>\n          <MattapanMappingRoutes />\n        </BrowserRouter>\n      </ThemeProvider>\n    </ApolloProvider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './performance/reportWebVitals';\nrequire('dotenv').config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nif (process.env.NODE_ENV !== 'production') {\n  reportWebVitals(console.log);\n}\n"],"sourceRoot":""}